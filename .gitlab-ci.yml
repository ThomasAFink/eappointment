include:
    remote: https://gitlab.com/eappointment/php-base/-/raw/main/template-php-ci.yml

test-php-73:
    variables:
      PHP_VERSION: 7.3
    image: registry.gitlab.com/eappointment/php-base:${PHP_VERSION}-dev
    script:
        - $CLI_COMPOSER
        - $CLI_PHPCS
        - $CLI_PHPMD
        - docker-php-ext-enable xdebug
        - $CLI_PHPUNIT $CLI_PHPUNIT_PARAM
    coverage: '/^\s*Lines:\s*\d+.\d+\%/'

    allow_failure: true
    before_script:
        - $CLI_COMPOSER
        - npm install --legacy-peer-deps
        - make css
    variables:
        PHP_VERSION: "7.3"
    only:
        changes:
            - .gitlab-ci.yml
            - composer.lock
            - composer.json
            - schema/**/*
            - templates/**/*
            - src/**/*
            - tests/**/*.{json,php}

#test-php-81:
#    extends: .test-php
#    allow_failure: true
#    variables:
#      PHP_VERSION: "8.1"
#    only:
#        changes:
#            - .gitlab-ci.yml
#            - composer.lock
#            - composer.json
#            - schema/**/*
#            - templates/**/*
#            - src/**/*
#            - tests/**/*.{json,php}

outdated:
    extends: .test-phpoutdated

pages:
    stage: deploy
    script:
        - echo "/zmsadmin/ /zmsadmin/_tests/coverage/index.html 302" >> public/_redirects
        - find public/
    artifacts:
        paths:
            - public
    only:
        refs:
            - main
        changes:
            - src/**/*
            - tests/**/*.{json,php}
            - routing.php
            - .gitlab-ci.yml
    environment:
        name: analytics
        url: https://eappointment.gitlab.io/zmsadmin

build-docker:
    stage: build
    image: docker:stable
    services:
        - docker:dind
    variables:
        PHP_VERSION: "8.0"
        BUILD_CONTEXT: "."
    script:
        - if [ -z ${TAG+x} ]; then TAG="${CI_COMMIT_TAG:=branch-$(echo $CI_COMMIT_BRANCH | sed -e 's/[^a-zA-Z0-9]/-/g')}"; fi
        - 'echo "Docker Image Tag: $TAG"'
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
        - docker pull "${CI_REGISTRY_IMAGE}:${TAG}" || true
        - docker build 
            --pull
            --build-arg PHP_VERSION=${PHP_VERSION}
            --build-arg IMAGE_TAG=${TAG}
            -t "${CI_REGISTRY_IMAGE}:${TAG}"
            "$BUILD_CONTEXT"
        - docker push "${CI_REGISTRY_IMAGE}:${TAG}"
            


