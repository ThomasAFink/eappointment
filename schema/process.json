{
  "type": "object",
  "description": "A process represents a request from one or more clients, usually including an appointment. Compared to an appointment, the process has additional information about the status of the request from the client.",
  "example": {
    "amendment": "Beispiel Termin",
    "appointments": [
      {
        "date": 1447869171,
        "scope": {
          "id": 123
        },
        "slotCount": 2
      }
    ],
    "authKey": "abcd",
    "clients": [
      {
        "familyName": "Max Mustermann",
        "email": "max@service.berlin.de",
        "telephone": "030 115"
      }
    ],
    "createIP": "145.15.3.10",
    "createTimestamp": 1447931596,
    "lastChange": 1447931596,
    "id": 123456,
    "queue": {
      "arrivalTime": 1447922893,
      "callCount": 1,
      "callTime": 1447922938,
      "lastCallTime": 1447922938,
      "number": "123",
      "waitingTime": 2,
      "withAppointment": 1,
      "status": "queued"
    },
    "reminderTimestamp": 1447931730,
    "requests": [
      {
        "id": "123456",
        "name": "Name der Dienstleistung",
        "source": "dldb"
      }
    ],
    "scope": {
      "id": 123,
      "hint": "Standort aus Beispiel-Termin",
      "provider": {
        "name": "Bürgeramt 1",
        "contact": {
          "name": "Bürgeramt 1",
          "street": "Unter den Linden",
          "streetNumber": "1",
          "postalCode": "12345",
          "city": "Berlin"
        }
      }
    },
    "status": "confirmed"
  },
  "required": [
    "id"
  ],
  "additionalProperties": false,
  "properties": {
    "amendment": {
      "type": [
        "string"
      ],
      "description": "additional information for this process from the client",
      "default": ""
    },
    "appointments": {
      "type": "array",
      "items": {
        "$ref": "appointment.json"
      }
    },
    "archiveId": {
      "type": "number",
      "description": "Number is used to identify a process in an archive (for statistical purposes)\n"
    },
    "authKey": {
      "type": "string",
      "description": "key for client to delete or change process"
    },
    "clients": {
      "type": "array",
      "items": {
        "$ref": "client.json"
      }
    },
    "createIP": {
      "type": "string",
      "description": "IP Address of the creator"
    },
    "createTimestamp": {
      "type": "number",
      "description": "unix timestamp representing creation of the process"
    },
    "id": {
      "type": "number",
      "description": "Number is used to identify appointments like on call displays\n",
      "minimum": 1000
    },
    "lastChange": {
      "type": "number",
      "description": "unix timestamp of the last change on this process"
    },
    "queue": {
      "$ref": "queue.json"
    },
    "reminderTimestamp": {
      "type": "number",
      "description": "timestamp of last reminder message"
    },
    "requests": {
      "type": "array",
      "items": {
        "$ref": "request.json"
      }
    },
    "scope": {
      "$ref": "scope.json"
    },
    "status": {
      "type": "string",
      "enum": [
        "free",
        "reserved",
        "confirmed",
        "queued",
        "called",
        "processing",
        "pending",
        "pickup",
        "finished",
        "missed",
        "archived",
        "deleted",
        "anonymized",
        "blocked",
        "conflict"
      ],
      "description": "Status of the process. The following values are possible:\n  * free: open for reservation\n  * reserved: for updating data, no validation yet\n  * confirmed: appointment\n  * queued: confirmed and in waiting queue\n  * called: show on call displays\n  * processing: client appeared and gets service\n  * pending: client has to return to fetch papers\n  * pickup: client is called to fetch papers\n  * finished: successfully processed\n  * missed: no client appeared\n  * archived: only used in statistics\n  * deleted: blocking appointment time\n  * anonymized: for statistically purposes only\n  * blocked: to avoid the reuse of IDs on the same day\n  * conflict: mark process as conflict for check functions\n"
    }
  }
}
