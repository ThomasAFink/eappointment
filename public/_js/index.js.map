{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","index.js","js/block/periodlist/index.js","js/block/warehousereport/index.js","js/index.js","js/lib/baseview.js","js/lib/bindHandler.js","js/lib/dialogHandler.js","js/lib/exceptionHandler.js","js/lib/utils.js","js/settings.js","node_modules/chart.js/node_modules/chartjs-color/index.js","node_modules/chart.js/node_modules/chartjs-color/node_modules/chartjs-color-string/color-string.js","node_modules/chart.js/node_modules/chartjs-color/node_modules/chartjs-color-string/node_modules/color-name/index.js","node_modules/chart.js/node_modules/chartjs-color/node_modules/color-convert/conversions.js","node_modules/chart.js/node_modules/chartjs-color/node_modules/color-convert/index.js","node_modules/chart.js/src/chart.js","node_modules/chart.js/src/charts/Chart.Bar.js","node_modules/chart.js/src/charts/Chart.Bubble.js","node_modules/chart.js/src/charts/Chart.Doughnut.js","node_modules/chart.js/src/charts/Chart.Line.js","node_modules/chart.js/src/charts/Chart.PolarArea.js","node_modules/chart.js/src/charts/Chart.Radar.js","node_modules/chart.js/src/charts/Chart.Scatter.js","node_modules/chart.js/src/controllers/controller.bar.js","node_modules/chart.js/src/controllers/controller.bubble.js","node_modules/chart.js/src/controllers/controller.doughnut.js","node_modules/chart.js/src/controllers/controller.line.js","node_modules/chart.js/src/controllers/controller.polarArea.js","node_modules/chart.js/src/controllers/controller.radar.js","node_modules/chart.js/src/controllers/controller.scatter.js","node_modules/chart.js/src/core/core.animation.js","node_modules/chart.js/src/core/core.controller.js","node_modules/chart.js/src/core/core.datasetController.js","node_modules/chart.js/src/core/core.defaults.js","node_modules/chart.js/src/core/core.element.js","node_modules/chart.js/src/core/core.helpers.js","node_modules/chart.js/src/core/core.interaction.js","node_modules/chart.js/src/core/core.js","node_modules/chart.js/src/core/core.layouts.js","node_modules/chart.js/src/core/core.plugins.js","node_modules/chart.js/src/core/core.scale.js","node_modules/chart.js/src/core/core.scaleService.js","node_modules/chart.js/src/core/core.ticks.js","node_modules/chart.js/src/core/core.tooltip.js","node_modules/chart.js/src/elements/element.arc.js","node_modules/chart.js/src/elements/element.line.js","node_modules/chart.js/src/elements/element.point.js","node_modules/chart.js/src/elements/element.rectangle.js","node_modules/chart.js/src/elements/index.js","node_modules/chart.js/src/helpers/helpers.canvas.js","node_modules/chart.js/src/helpers/helpers.core.js","node_modules/chart.js/src/helpers/helpers.easing.js","node_modules/chart.js/src/helpers/helpers.options.js","node_modules/chart.js/src/helpers/index.js","node_modules/chart.js/src/platforms/platform.basic.js","node_modules/chart.js/src/platforms/platform.dom.js","node_modules/chart.js/src/platforms/platform.js","node_modules/chart.js/src/plugins/index.js","node_modules/chart.js/src/plugins/plugin.filler.js","node_modules/chart.js/src/plugins/plugin.legend.js","node_modules/chart.js/src/plugins/plugin.title.js","node_modules/chart.js/src/scales/scale.category.js","node_modules/chart.js/src/scales/scale.linear.js","node_modules/chart.js/src/scales/scale.linearbase.js","node_modules/chart.js/src/scales/scale.logarithmic.js","node_modules/chart.js/src/scales/scale.radialLinear.js","node_modules/chart.js/src/scales/scale.time.js","node_modules/moment/locale/de.js","node_modules/moment/moment.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_baseview","_baseview2","View","_BaseView","element","options","this","_this","getPrototypeOf","bindEvents","console","log","_this2","$main","off","on","ev","preventDefault","stopPropagation","find","hide","removeClass","../../lib/baseview","2","_chart","_chart2","$","text","data","JSON","parse","attr","renderChartjs","number","list","items","push","label","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","dictionary","Symbol","iterator","next","done","info","variable","err","getLabelInfo","reduce","reduceToField","position","labels","getListByLabel","visualization","xlabel","datasets","colorlist","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","ylabel","datalabel","dataset","description","borderColor","shift","fill","html","css","width","height","$canvas","canvascontext","getContext","type","elements","line","tension","legend","display","boxWidth","usePointStyle","tooltips","mode","chart.js","3","global","_window","window","_window2","_jquery","_jquery2","_moment","_moment2","_utils","_periodlist","_periodlist2","_warehousereport","_warehousereport2","locale","forceHttps","each","getDataAttributes","./block/periodlist","./block/warehousereport","./lib/utils","babel-polyfill","jquery","moment","moment/locale/de","4","_bindHandler","_bindHandler2","_exceptionHandler","_exceptionHandler2","_dialogHandler","_dialogHandler2","BaseView","_BindHandler","arguments","loadPromise","Promise","reject","noOp","url","method","spinner","loadCallStatic","get","parent","showSpinner","ajaxSettings","resolve","ajax","responseData","fail","isException","responseText","toLowerCase","includes","status","message","hideSpinner","response","_callback","callbackAsBackgroundAction","$container","$loader","loadCall","_lightbox","lightbox","destroyLightbox","lightboxContentElement","callback","loader","handleLightbox","./bindHandler","./dialogHandler","./exceptionHandler","./utils","5","BindHandler","object","_len","methods","Array","_key","forEach","bind","6","_settings","_settings2","DialogHandler","render","hideMessages","content","filter","outerHTML","instant","setTimeout","not","fadeOut","remove","hideMessageTime","../settings","7","ExceptionHandler","closeException","$message","$messageElement","first","prepend","$buttons","append","8","_defineProperty","getUrlParameters","tryJson","deepGet","range","timestampToFloat","timeToFloat","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","isArray","attributesToArray","time","momentTime","hours","minutes","timestamp","start","end","step","result","path","carry","current","attributes","slice","dataRegex","attribute","test","nodeName","map","name","replace","_ref","_ref2","input","lightboxHtml","parentElement","onBackgroundClick","lightboxElement","addClass","document","location","search","split","_current$split","_current$split2","assign","protocol","includeUrl","then","loadDialogStatic","href","substring","./baseview","9","10","convert","string","Color","valid","values","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","red","l","lightness","v","w","whiteness","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","Math","pow","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","toJSON","clone","source","prop","hasOwnProperty","toString","error","spaces","maxes","getValues","space","charAt","chans","max","min","capped","round","sname","args","index","svalues","chartjs-color-string","color-convert","11","abbr","hex","rgba","per","match","parseInt","parseFloat","colorNames","scale","h","s","isNaN","b","getRgb","getHsl","hsla","getAlpha","hexDouble","percentaString","g","reverseNames","num","str","toUpperCase","color-name","12","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","13","rgb2hsl","delta","rgb2hsv","rgb2hwb","rgb2cmyk","m","y","k","rgb2keyword","reverseKeywords","stringify","rgb2xyz","x","z","rgb2lab","xyz","rgb2lch","lab2lch","hsl2rgb","t1","t2","t3","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hi","floor","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","wh","bl","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","y2","hr","atan2","PI","sqrt","lab2rgb","lch2lab","lch","cos","sin","lch2xyz","lch2rgb","keyword2rgb","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","14","conversions","Converter","func","arg","pair","exec","from","to","convs","routeSpace","fspace","./conversions","15","Chart","helpers","defaults","Element","Interaction","layouts","platform","plugins","Ticks","register","initialize","Legend","_element","Title","title","pluginService","PluginBase","extend","canvasHelpers","canvas","layoutService","./charts/Chart.Bar","./charts/Chart.Bubble","./charts/Chart.Doughnut","./charts/Chart.Line","./charts/Chart.PolarArea","./charts/Chart.Radar","./charts/Chart.Scatter","./controllers/controller.bar","./controllers/controller.bubble","./controllers/controller.doughnut","./controllers/controller.line","./controllers/controller.polarArea","./controllers/controller.radar","./controllers/controller.scatter","./core/core","./core/core.animation","./core/core.controller","./core/core.datasetController","./core/core.defaults","./core/core.element","./core/core.helpers","./core/core.interaction","./core/core.layouts","./core/core.plugins","./core/core.scale","./core/core.scaleService","./core/core.ticks","./core/core.tooltip","./elements/index","./helpers/index","./platforms/platform","./plugins","./scales/scale.category","./scales/scale.linear","./scales/scale.linearbase","./scales/scale.logarithmic","./scales/scale.radialLinear","./scales/scale.time","16","Bar","context","config","17","Bubble","18","Doughnut","19","Line","20","PolarArea","21","Radar","22","Scatter","23","computeMinSampleSize","pixels","prev","curr","ilen","isHorizontal","ticks","getTicks","getPixelForTick","computeFitCategoryTraits","ruler","size","thickness","barThickness","count","stackCount","isNullOrUndef","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","percent","_set","hover","scales","xAxes","offset","gridLines","offsetGridLines","yAxes","axis","rectangle","borderSkipped","callbacks","item","yLabel","datasetLabel","datasetIndex","xLabel","controllers","bar","DatasetController","dataElementType","Rectangle","meta","me","apply","getMeta","stack","getDataset","update","reset","rects","_ruler","getRuler","updateElement","chart","custom","rectangleOptions","_xScale","getScaleForId","xAxisID","_yScale","yAxisID","_datasetIndex","_index","_model","backgroundColor","valueAtIndexOrDefault","borderWidth","updateElementGeometry","pivot","model","vscale","getValueScale","base","getBasePixel","horizontal","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","last","stacked","stacks","getDatasetMeta","isDatasetVisible","indexOf","getStackCount","getStackIndex","left","top","getPixelForValue","imeta","ivalue","getRightValue","controller","id","stackIndex","valueOrDefault","maxBarThickness","Infinity","draw","clipArea","ctx","chartArea","unclipArea","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","rectangleElementOptions","horizontalBar","../core/core.defaults","../elements/index","../helpers/index","24","dataPoint","bubble","Point","points","point","xScale","yScale","_resolveElementOptions","dsIndex","getPixelForDecimal","NaN","_options","hitRadius","pointStyle","radius","skip","hoverRadius","dataIndex","keys","25","animation","animateRotate","animateScale","legendCallback","join","generateLabels","ds","arc","arcOpts","stroke","bw","fillStyle","strokeStyle","lineWidth","hidden","onClick","legendItem","cutoutPercentage","rotation","circumference","tooltipItem","dataLabel","doughnut","pie","Arc","linkScales","noop","getRingIndex","ringIndex","j","opts","availableWidth","right","availableHeight","bottom","minSize","startAngle","endAngle","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","abs","arcs","hoverWidth","26","showLines","spanGaps","lineEnabled","showLine","datasetElementType","lineElementOptions","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","Number","rightValue","capControlPoint","pt","controlPoints","area","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","27","angleLines","circular","pointLabels","beginAtZero","polarArea","countVisibleElements","xCenter","yCenter","visibleCount","datasetStartAngle","distance","getDistanceFromCenterForValue","resetRadius","28","radar","_loop","pointElementOptions","pointPosition","getPointPositionForValue","29","scatter","30","duration","easing","onProgress","onComplete","Animation","currentStep","numSteps","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","set","./core.defaults","./core.element","31","initConfig","configMerge","updateConfig","newOptions","removeBox","ensureScalesHaveIDs","buildOrUpdateScales","tooltip","positionIsHorizontal","types","instances","construct","acquireContext","uid","aspectRatio","_bufferedRender","notify","retinaScale","devicePixelRatio","responsive","resize","initToolTip","clear","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","style","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","ControllerClass","resetElements","_invalidate","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","effects","stepDecimal","easingValue","transition","boxes","box","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","modes","single","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","destroy","unbindEvents","releaseContext","toBase64Image","toDataURL","Tooltip","_chartInstance","listeners","_listeners","listener","eventHandler","events","addEventListener","removeEventListener","updateHoverStyle","enabled","changed","handleEvent","_start","bufferedRequest","animationDuration","hoverOptions","active","onHover","arrayEquals","Controller","../platforms/platform","./core.interaction","./core.layouts","./core.plugins","32","listenArrayEvents","array","_chartjs","arrayEvents","res","unlistenArrayEvents","stub","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","resyncElements","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","onDataSplice","onDataUnshift","inherits","33","scope","merge","34","interpolate","view","ease","actual","origin","c0","c1","color","isFinite","configuration","_view","tooltipPosition","hasValue","isNumber","chartjs-color","35","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","merger","tval","sval","scaleMerge","getScaleDefaults","_merger","slen","where","collection","filterCallback","filtered","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","LOG10E","powerOf10","isPowerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","deltaX","loop","niceNum","niceFraction","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","getRelativePosition","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","container","clientWidth","cw","clientHeight","ch","el","property","currentStyle","getPropertyValue","forceRatio","pixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","cache","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","defaultColor","colorValue","CanvasPattern","36","parseVisibleItems","handler","jlen","getIntersectItems","inRange","getNearestItems","distanceMetric","minDistance","nearestItems","getCenterPoint","getDistanceMetricForAxis","useX","useY","deltaY","indexMode","x-axis","nearest","sort","sizeA","getArea","sizeB","ret","intersectsItem","inXRange","inYRange","37","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","layout","padding","38","filterByPosition","sortByWeight","reverse","_tmpIndex_","v0","v1","addBox","fullWidth","layoutItem","configure","getMinimumBoxSize","chartWidth","maxChartAreaWidth","horizontalBoxHeight","maxChartAreaHeight","verticalBoxWidth","minBoxSizes","fitBox","minBoxSize","minBox","scaleMargin","totalLeftBoxesWidth","maxHorizontalLeftPadding","totalRightBoxesWidth","maxHorizontalRightPadding","chartHeight","finalFitVerticalBox","totalTopBoxesHeight","totalBottomBoxesHeight","placeBox","leftPadding","rightPadding","layoutOptions","toPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaWidth","chartAreaHeight","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","39","_plugins","_cacheId","plugin","unregister","idx","getAll","hook","params","descriptors","$plugins","40","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","formatters","minor","major","computeTextSize","tick","parseFontOptions","globalDefaults","fontSize","family","parseLineHeight","toLineHeight","Scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","sinRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","scaleLabelLineHeight","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","shouldSkip","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","save","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","restore","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","./core.ticks","41","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","42","linear","tickValue","logDelta","tickString","numDecimal","toFixed","logarithmic","remain","toExponential","43","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getTooltipSize","body","combinedBodyLength","bodyItem","before","lines","after","titleLineCount","footerLineCount","widthPadding","maxLineWidth","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","vm","alignment","paddingAndSize","radiusAndPadding","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","len","existingModel","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","quadraticCurveTo","closePath","hasTooltipContent","average","pos","eventPosition","nearestElement","d","tp","44","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","../core/core.element","45","currentVM","globalOptionLineElements","lastDrawnIndex","lineCap","46","xRange","yRange","errMargin","drawPoint","47","isVertical","getBarBounds","halfWidth","halfHeight","cornerAt","corners","startCorner","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","borders","corner","bounds","48","./element.arc","./element.line","./element.point","./element.rectangle","49","clearRect","roundedRect","rx","ry","rect","edgeLength","xOffset","yOffset","drawImage","SQRT2","leftX","topY","sideSize","clip","flip","bezierCurveTo","drawRoundedRectangle","./helpers.core","50","isObject","defaultValue","fn","thisArg","loopable","a0","a1","klen","_mergerIf","mergeIf","sources","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","51","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","52","matches","inputs","53","./helpers.canvas","./helpers.easing","./helpers.options","54","55","readUsedSize","initCanvas","renderHeight","getAttribute","renderWidth","EXPANDO_KEY","initial","displayWidth","displayHeight","eventListenerOptions","createEvent","nativeEvent","native","fromNativeEvent","event","EVENT_TYPES","throttled","ticking","createResizer","resizer","createElement","cls","CSS_PREFIX","maxSize","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","watchForRender","expando","proxy","renderProxy","animationName","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","reflow","offsetParent","classList","add","CSS_RENDER_MONITOR","unwatchForRender","addResizeListener","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","supportsEventListenerOptions","supports","passive","_enabled","keyframes","getElementById","removeAttribute","proxies","addEvent","removeEvent","56","basic","dom","implementation","./platform.basic","./platform.dom","57","filler","./plugin.filler","./plugin.legend","./plugin.title","58","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","propagate","visited","visible","createMapper","mappers","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","span","boundary","afterDatasetsUpdate","$filler","beforeDatasetDraw","59","getBoxWidth","labelOpts","createNewLegendAndAttach","legendOpts","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","drawLegendBox","isLineWidthZero","offSet","halfFontSize","xLeft","yMiddle","lh","hitBox","beforeInit","afterEvent","../core/core.layouts","60","createNewTitleBlockAndAttach","titleOpts","titleBlock","textSize","titleX","titleY","titleFont","61","defaultConfig","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","62","LinearScale","LinearScaleBase","IDMatches","DEFAULT_MIN","DEFAULT_MAX","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","ceil","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","../core/core.ticks","63","generateTicks","generationOptions","dataRange","spacing","stepSize","niceRange","niceMin","niceMax","numSpaces","precision","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","fixedStepSize","64","exp","significand","tickVal","endExp","endSignificand","minNotZero","lastTick","LogarithmicScale","tickValues","_getFirstTickValue","firstTickValue","65","getValueCount","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","fitWithPointLabels","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","drawingArea","setCenterPoint","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","param","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","LinearRadialScale","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","66","sorter","arrayUnique","hash","out","buildLookupTable","timestamps","distribution","table","lookup","mid","i0","i1","lo","skey","tkey","momentify","parser","format","startOf","valueOf","determineStepSize","unit","capacity","factor","interval","INTERVALS","milliseconds","steps","determineUnitForAutoTicks","minUnit","UNITS","MAX_INTEGER","common","determineUnitForFormatting","diff","as","determineMajorUnit","generate","timeOpts","unitStepSize","weekday","isoWeekday","majorTicksEnabled","computeOffsets","upper","lower","ticksFromTimestamps","majorUnit","determineLabelFormat","momentDate","hasTime","millisecond","second","minute","hour","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","day","week","month","quarter","year","displayFormat","displayFormats","TimeScale","warn","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","_majorUnit","_offsets","_labelFormat","tooltipFormat","tickFormatFunction","formatOverride","formats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","exampleTime","exampleLabel","67","factory","define","amd","processRelativeTime","withoutSuffix","isFuture","dd","M","MM","yy","de","defineLocale","months","monthsShort","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","sameElse","nextDay","nextWeek","lastDay","lastWeek","relativeTime","future","past","ss","mm","hh","dayOfMonthOrdinalParse","ordinal","dow","doy","../moment","68","hooks","hookCallback","setHookCallback","isObjectEmpty","getOwnPropertyNames","isUndefined","isDate","hasOwnProp","createUTC","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","_isValid","flags","parsedParts","some","isNowValid","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","copyConfig","_isAMomentObject","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","updateInProgress","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecateSimple","deprecations","isFunction","Function","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","mom","output","_calendar","_longDateFormat","formatUpper","invalidDate","_invalidDate","_ordinal","_relativeTime","pastFuture","addUnitAlias","shorthand","lowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","zeroFill","targetLength","forceSign","absNumber","zerosToFill","substr","addFormatToken","token","padded","formatTokenFunctions","localeData","removeFormattingTokens","makeFormatFunction","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","regexEscape","matched","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInYear","isLeapYear","getIsLeapYear","makeGetSet","keepTime","set$1","date","daysInMonth","stringGet","stringSet","prioritized","mod","modMonth","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","createDate","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","weekdaysParse","parseIsoWeekday","localeWeekdays","_weekdays","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","kFormat","lowercase","matchMeridiem","_meridiemParse","localeIsPM","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","loadLocale","globalLocale","oldLocale","locales","_abbr","aliasedRequire","getSetGlobalLocale","getLocale","baseConfig","parentLocale","localeFamilies","updateLocale","tmpLocale","listLocales","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","currentDateArray","nowValue","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","untruncateYear","defaultLocaleMonthsShort","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","weekdayProvided","defaultLocaleWeekdaysShort","weekdayActual","calculateOffset","obsOffset","militaryOffset","numOffset","obsOffsets","hm","configFromRFC2822","parsedArray","configFromString","aspNetJsonRegex","createFromInputFallback","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","isValid$1","createInvalid$1","createDuration","Duration","years","quarters","weeks","days","seconds","_milliseconds","_days","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","matcher","parts","chunkOffset","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","isAfter","isBefore","createAdder","direction","period","dur","isAdding","getCalendarFormat","myMoment","calendar$1","sod","calendarFormat","localInput","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","keepOffset","toDate","inspect","zone","prefix","datetime","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","unix","toObject","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","monthsFromDays","monthsToDays","daysToMonths","valueOf$1","makeAs","alias","clone$1","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","withSuffix","toISOString$1","abs$1","Y","D","asSeconds","totalSign","ymSign","daysSign","hmsSign","fun","defaultCalendar","defaultLongDateFormat","defaultInvalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","defaultRelativeTime","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","parseTwoDigitYear","getSetYear","defaultLocaleMonths","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysMin","kInput","_isPm","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","meridiemParse","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS"],"mappings":"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","file":"index.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _baseview = require('../../lib/baseview');\n\nvar _baseview2 = _interopRequireDefault(_baseview);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar View = function (_BaseView) {\n    _inherits(View, _BaseView);\n\n    function View(element, options) {\n        _classCallCheck(this, View);\n\n        var _this = _possibleConstructorReturn(this, (View.__proto__ || Object.getPrototypeOf(View)).call(this, element, options));\n\n        _this.bindEvents();\n        console.log('Component: Periodlist', _this, options);\n        return _this;\n    }\n\n    _createClass(View, [{\n        key: 'bindEvents',\n        value: function bindEvents() {\n            var _this2 = this;\n\n            this.$main.off('click').on('click', '.report-period--show-all', function (ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                _this2.$main.find('.report-period--show-all').hide();\n                _this2.$main.find(\".report-period--table tr\").removeClass('hide');\n            });\n        }\n    }]);\n\n    return View;\n}(_baseview2.default);\n\nexports.default = View;\n\n},{\"../../lib/baseview\":4}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _baseview = require(\"../../lib/baseview\");\n\nvar _baseview2 = _interopRequireDefault(_baseview);\n\nvar _chart = require(\"chart.js\");\n\nvar _chart2 = _interopRequireDefault(_chart);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar View = function (_BaseView) {\n    _inherits(View, _BaseView);\n\n    function View(element, options) {\n        _classCallCheck(this, View);\n\n        var _this = _possibleConstructorReturn(this, (View.__proto__ || Object.getPrototypeOf(View)).call(this, element, options));\n\n        _this.bindEvents();\n        console.log('Component: Warehouse report', _this, options);\n        _this.$.find(\".chartist\").text('[Initializing chart...]');\n        _this.data = JSON.parse(_this.$.find(\".chartist\").attr('data-chartist'));\n        _this.$.find(\".chartist\").attr('data-chartist', '');\n        //this.renderChartist(data);\n        _this.renderChartjs();\n        return _this;\n    }\n\n    _createClass(View, [{\n        key: \"bindEvents\",\n        value: function bindEvents() {\n            //this.$main.off('click').on('click', '.report-period--show-all', (ev) => {\n            //    ev.preventDefault();\n            //    ev.stopPropagation();\n            //    this.$main.find('.report-period--show-all').hide();\n            //    this.$main.find(\".report-period--table tr\").removeClass('hide');\n            //})\n        }\n    }, {\n        key: \"reduceToField\",\n        value: function reduceToField(number) {\n            return function (list, items) {\n                list.push(items[number]);\n                return list;\n            };\n        }\n    }, {\n        key: \"getLabelInfo\",\n        value: function getLabelInfo(label) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this.data.dictionary[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var info = _step.value;\n\n                    if (info.variable == label) {\n                        return info;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            throw \"WarehouseReport: Label \" + label + \" not found\";\n        }\n    }, {\n        key: \"getListByLabel\",\n        value: function getListByLabel(label) {\n            var info = this.getLabelInfo(label);\n            var list = this.data.data.reduce(this.reduceToField(info.position), []);\n            return list;\n        }\n    }, {\n        key: \"renderChartjs\",\n        value: function renderChartjs() {\n            //console.log(this.data);\n            //console.log(this.data.visualization.ylabel);\n            var labels = this.getListByLabel(this.data.visualization.xlabel[0]);\n            var datasets = [];\n            var colorlist = ['#008cca', '#ffacaa', '#d0eaca', '#c2c2c2', '#efc10f'];\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this.data.visualization.ylabel[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var datalabel = _step2.value;\n\n                    var dataset = {};\n                    console.log(datalabel);\n                    dataset.label = this.getLabelInfo(datalabel).description;\n                    dataset.data = this.getListByLabel(datalabel);\n                    dataset.borderColor = colorlist.shift();\n                    dataset.fill = false;\n                    datasets.push(dataset);\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            this.$.find(\".chartist\").html('<canvas></canvas>&nbsp;');\n            this.$.find(\".chartist\").css({\n                \"position\": \"relative\",\n                \"width\": \"100%\",\n                \"height\": \"550px\"\n            });\n            var $canvas = this.$.find(\".chartist canvas\");\n            var canvascontext = $canvas[0].getContext('2d');\n            //console.log(datasets);\n            new _chart2.default(canvascontext, {\n                type: 'line',\n                data: {\n                    labels: labels,\n                    datasets: datasets\n                },\n                options: {\n                    elements: {\n                        line: {\n                            tension: 0.25 // bezier error\n                        }\n                    },\n                    legend: {\n                        display: true,\n                        labels: {\n                            boxWidth: 12,\n                            usePointStyle: false\n                        }\n                    },\n                    tooltips: {\n                        mode: \"index\"\n                    }\n                }\n            });\n        }\n    }]);\n\n    return View;\n}(_baseview2.default);\n\nexports.default = View;\n\n},{\"../../lib/baseview\":4,\"chart.js\":15}],3:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nrequire(\"babel-polyfill\");\n\nvar _window = (typeof window !== \"undefined\" ? window['window'] : typeof global !== \"undefined\" ? global['window'] : null);\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _jquery = require(\"jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _moment = require(\"moment\");\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nrequire(\"moment/locale/de\");\n\nvar _utils = require(\"./lib/utils\");\n\nvar _periodlist = require(\"./block/periodlist\");\n\nvar _periodlist2 = _interopRequireDefault(_periodlist);\n\nvar _warehousereport = require(\"./block/warehousereport\");\n\nvar _warehousereport2 = _interopRequireDefault(_warehousereport);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Bind jQuery on $ for testing\n\n//import bindReact from './lib/bindReact.js'\n\n\n// Import base libs\n_window2.default.$ = _jquery2.default; // --------------------------------------------------------\n// ZMS Statistic behavior\n// --------------------------------------------------------\n\n_moment2.default.locale('de');\n\n// Force https protocol\n(0, _utils.forceHttps)();\n\n// Say hello\nconsole.log(\"Welcome to the ZMS statistics interface...\");\n\n(0, _jquery2.default)('.report-period').each(function () {\n    new _periodlist2.default(this, (0, _utils.getDataAttributes)(this));\n});\n\n(0, _jquery2.default)('.warehouse-report').each(function () {\n    new _warehousereport2.default(this, (0, _utils.getDataAttributes)(this));\n});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./block/periodlist\":1,\"./block/warehousereport\":2,\"./lib/utils\":8,\"babel-polyfill\":\"babel-polyfill\",\"jquery\":\"jquery\",\"moment\":\"moment\",\"moment/locale/de\":67}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _jquery = require(\"jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _bindHandler = require(\"./bindHandler\");\n\nvar _bindHandler2 = _interopRequireDefault(_bindHandler);\n\nvar _exceptionHandler = require(\"./exceptionHandler\");\n\nvar _exceptionHandler2 = _interopRequireDefault(_exceptionHandler);\n\nvar _dialogHandler = require(\"./dialogHandler\");\n\nvar _dialogHandler2 = _interopRequireDefault(_dialogHandler);\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BaseView = function (_BindHandler) {\n    _inherits(BaseView, _BindHandler);\n\n    function BaseView(element) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        _classCallCheck(this, BaseView);\n\n        var _this = _possibleConstructorReturn(this, (BaseView.__proto__ || Object.getPrototypeOf(BaseView)).call(this));\n\n        _this.$main = (0, _jquery2.default)(element);\n        _this.$main.off();\n        _this.options = options;\n        _this.loadPromise = Promise.reject(null).catch(_utils.noOp);\n        return _this;\n    }\n\n    _createClass(BaseView, [{\n        key: \"loadCall\",\n        value: function loadCall(url) {\n            var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n            var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var spinner = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            return BaseView.loadCallStatic(url, method, data, spinner, this);\n        }\n    }, {\n        key: \"$\",\n        get: function get() {\n            return this.$main;\n        }\n    }], [{\n        key: \"loadCallStatic\",\n        value: function loadCallStatic(url) {\n            var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n            var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var spinner = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n            var parent = arguments[4];\n\n            if (spinner) {\n                (0, _utils.showSpinner)(parent.$main);\n            }\n            var ajaxSettings = {\n                method: method\n            };\n            if (method === 'POST' || method === 'PUT') {\n                ajaxSettings.data = data;\n            }\n            return new Promise(function (resolve, reject) {\n                _jquery2.default.ajax(url, ajaxSettings).done(function (responseData) {\n                    resolve(responseData);\n                }).fail(function (err) {\n                    var isException = err.responseText.toLowerCase().includes('exception');\n                    if (err.status >= 400 && isException) {\n                        new _exceptionHandler2.default(parent.$main, {\n                            code: err.status,\n                            message: err.responseText,\n                            parent: parent\n                        });\n                        (0, _utils.hideSpinner)(parent.$main);\n                    } else {\n                        console.log('XHR load error', url, err);\n                        reject(err);\n                    }\n                });\n            });\n        }\n    }, {\n        key: \"loadDialogStatic\",\n        value: function loadDialogStatic(response, _callback, parent) {\n            var callbackAsBackgroundAction = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            var $container = null;\n            var $loader = null;\n            if (parent) {\n                $container = parent.$main;\n                $loader = parent.loadCall;\n            }\n\n            var _lightbox = (0, _utils.lightbox)($container, function () {\n                destroyLightbox(), callbackAsBackgroundAction ? _callback() : function () {};\n            }),\n                lightboxContentElement = _lightbox.lightboxContentElement,\n                destroyLightbox = _lightbox.destroyLightbox;\n\n            new _dialogHandler2.default(lightboxContentElement, {\n                response: response,\n                callback: function callback() {\n                    _callback();\n                    destroyLightbox();\n                },\n                parent: parent,\n                loader: $loader,\n                handleLightbox: destroyLightbox\n            });\n        }\n    }]);\n\n    return BaseView;\n}(_bindHandler2.default);\n\nexports.default = BaseView;\n\n},{\"./bindHandler\":5,\"./dialogHandler\":6,\"./exceptionHandler\":7,\"./utils\":8,\"jquery\":\"jquery\"}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar BindHandler = function () {\n    function BindHandler() {\n        _classCallCheck(this, BindHandler);\n    }\n\n    _createClass(BindHandler, [{\n        key: \"bindPublicMethods\",\n        value: function bindPublicMethods() {\n            var object = this;\n\n            for (var _len = arguments.length, methods = Array(_len), _key = 0; _key < _len; _key++) {\n                methods[_key] = arguments[_key];\n            }\n\n            methods.forEach(function (method) {\n                if (typeof object[method] !== 'function') {\n                    throw \"Method not found: \" + method;\n                }\n                object[method] = object[method].bind(object);\n            });\n        }\n    }]);\n\n    return BindHandler;\n}();\n\nexports.default = BindHandler;\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _exceptionHandler = require('./exceptionHandler');\n\nvar _exceptionHandler2 = _interopRequireDefault(_exceptionHandler);\n\nvar _settings = require('../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DialogHandler = function () {\n    function DialogHandler(element, options) {\n        _classCallCheck(this, DialogHandler);\n\n        this.$main = (0, _jquery2.default)(element);\n        this.response = options.response;\n        this.callback = options.callback || function () {};\n        this.parent = options.parent;\n        this.loader = options.loader || function () {};\n        this.handleLightbox = options.handleLightbox || function () {};\n        this.bindEvents();\n        this.render();\n    }\n\n    _createClass(DialogHandler, [{\n        key: 'render',\n        value: function render() {\n            DialogHandler.hideMessages(true);\n            var content = (0, _jquery2.default)(this.response).filter('div.dialog');\n            if (content.length == 0) {\n                var message = (0, _jquery2.default)(this.response).find('div.dialog');\n                if (message.length > 0) {\n                    content = message.get(0).outerHTML;\n                }\n            }\n            if (content.length == 0) {\n                new _exceptionHandler2.default(this.$main, { 'message': this.response });\n            } else {\n                this.$main.html(content);\n            }\n        }\n    }, {\n        key: 'bindEvents',\n        value: function bindEvents() {\n            var _this = this;\n\n            this.$main.off().on('click', '.button-ok', function (ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                _this.callback(ev);\n            }).on('click', '.button-abort', function (ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                _this.handleLightbox();\n            }).on('click', '.button-callback', function (ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                var callback = (0, _jquery2.default)(ev.target).data('callback');\n                _this.callback = _this.parent[callback];\n                _this.callback(ev);\n            });\n        }\n    }], [{\n        key: 'hideMessages',\n        value: function hideMessages() {\n            var instant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            var message = _jquery2.default.find('.message, .dialog');\n            if (message.length && !instant) {\n                setTimeout(function () {\n                    (0, _jquery2.default)(message).not('.message-keep').fadeOut().remove();\n                }, _settings2.default.hideMessageTime * 1000);\n            } else if (message.length && instant) {\n                (0, _jquery2.default)(message).not('.message-keep').fadeOut().remove();\n            }\n        }\n    }]);\n\n    return DialogHandler;\n}();\n\nexports.default = DialogHandler;\n\n},{\"../settings\":9,\"./exceptionHandler\":7,\"jquery\":\"jquery\"}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ExceptionHandler = function () {\n    function ExceptionHandler(element, options) {\n        _classCallCheck(this, ExceptionHandler);\n\n        this.$main = (0, _jquery2.default)(element);\n        this.message = options.message;\n        this.parent = options.parent || this.$main;\n        this.code = options.code;\n        this.callback = options.callback || this.closeException;\n        this.bindEvents();\n        this.render();\n    }\n\n    _createClass(ExceptionHandler, [{\n        key: 'render',\n        value: function render() {\n            var _this = this;\n\n            var $message = (0, _jquery2.default)(this.message).filter('div.exception');\n            if ($message.length == 0) {\n                $message = (0, _jquery2.default)(this.message).find('div.exception');\n            }\n\n            this.$messageElement = (0, _jquery2.default)($message.get(0).outerHTML);\n            this.$main.find('.dialog', '.exception').remove();\n            this.$main.find('.body').first().prepend(this.$messageElement);\n            var $buttons = this.$messageElement.find('.btn');\n            if ($buttons.length == 0) {\n                $buttons = (0, _jquery2.default)('<a class=\"btn button-cancel right\">X</a>');\n                this.$messageElement.find('.header').append($buttons);\n            }\n            $buttons.on('click', function (ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                var callback = (0, _jquery2.default)(ev.target).data('callback');\n                if (_this.parent[callback]) _this.callback = _this.parent[callback];\n                _this.callback(ev);\n            });\n            /*setTimeout(() => {\n                this.closeException();\n            },8000)\n            */\n        }\n    }, {\n        key: 'closeException',\n        value: function closeException() {\n            if (this.$messageElement) {\n                this.$messageElement.remove();\n            }\n        }\n    }, {\n        key: 'bindEvents',\n        value: function bindEvents() {}\n    }]);\n\n    return ExceptionHandler;\n}();\n\nexports.default = ExceptionHandler;\n\n},{\"jquery\":\"jquery\"}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.forceHttps = exports.getUrlParameters = exports.noOp = exports.lightbox = exports.tryJson = exports.getDataAttributes = exports.deepGet = exports.range = exports.timestampToFloat = exports.timeToFloat = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _baseview = require('./baseview');\n\nvar _baseview2 = _interopRequireDefault(_baseview);\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _settings = require('../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar timeToFloat = exports.timeToFloat = function timeToFloat(time) {\n    var momentTime = (0, _moment2.default)(time, 'HH:mm:ss');\n\n    return momentTime.hours() + momentTime.minutes() / 60;\n};\n\nvar timestampToFloat = exports.timestampToFloat = function timestampToFloat(timestamp) {\n    var momentTime = (0, _moment2.default)(timestamp, 'X');\n\n    return momentTime.hours() + momentTime.minutes() / 60;\n};\n\nvar range = exports.range = function range(start, end) {\n    var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n    var result = [];\n    for (var i = start; i <= end; i += step) {\n        result.push(i);\n    }\n\n    return result;\n};\n\nvar deepGet = exports.deepGet = function deepGet(obj) {\n    var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    return path.reduce(function (carry, current) {\n        return carry ? carry[current] : undefined;\n    }, obj);\n};\n\nvar attributesToArray = function attributesToArray(attributes) {\n    return Array.prototype.slice.call(attributes, 0);\n};\n\nvar getDataAttributes = exports.getDataAttributes = function getDataAttributes(element) {\n    var attributes = attributesToArray(element.attributes);\n    var dataRegex = /^data-/i;\n\n    return attributes.filter(function (attribute) {\n        return dataRegex.test(attribute.nodeName);\n    }).map(function (attribute) {\n        return [attribute.name.replace(dataRegex, ''), attribute.value];\n    }).reduce(function (carry, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        carry[key] = tryJson(value);\n        return carry;\n    }, {});\n};\n\nvar tryJson = exports.tryJson = function tryJson(input) {\n    try {\n        return JSON.parse(input);\n    } catch (e) {\n        return input;\n    }\n};\n\nvar lightboxHtml = '<div class=\"lightbox\"><div class=\"lightbox__content\"></div></div>';\n\nvar lightbox = exports.lightbox = function lightbox(parentElement, onBackgroundClick) {\n    var lightboxElement = (0, _jquery2.default)(lightboxHtml);\n\n    if (!parentElement) {\n        parentElement = (0, _jquery2.default)('body');\n        lightboxElement.addClass('fixed');\n    }\n\n    var destroyLightbox = function destroyLightbox() {\n        lightboxElement.off();\n        lightboxElement.remove();\n    };\n\n    var lightboxContentElement = lightboxElement.find('.lightbox__content');\n\n    lightboxElement.on('click', function (ev) {\n        console.log('background click', ev);\n        ev.stopPropagation();\n        ev.preventDefault();\n        destroyLightbox();\n        onBackgroundClick();\n    }).on('click', '.lightbox__content', function (ev) {\n        ev.stopPropagation();\n    });\n\n    (0, _jquery2.default)(parentElement).append(lightboxElement);\n\n    return {\n        lightboxContentElement: lightboxContentElement,\n        destroyLightbox: destroyLightbox\n    };\n};\n\nvar noOp = exports.noOp = function noOp() {};\n\nvar getUrlParameters = exports.getUrlParameters = function getUrlParameters() {\n    return document.location.search.replace(/^\\?/, \"\").split(\"&\").reduce(function (carry, current) {\n        var _current$split = current.split('='),\n            _current$split2 = _slicedToArray(_current$split, 2),\n            key = _current$split2[0],\n            value = _current$split2[1];\n\n        if (key) {\n            return Object.assign({}, carry, _defineProperty({}, key, value));\n        } else {\n            return carry;\n        }\n    }, {});\n};\n\nvar forceHttps = exports.forceHttps = function forceHttps() {\n    if (document.location.protocol !== \"https:\") {\n        _baseview2.default.loadCallStatic(_settings2.default.includeUrl + '/dialog/?template=force_https').then(function (response) {\n            _baseview2.default.loadDialogStatic(response, function () {\n                document.location.href = \"https://\" + document.location.href.substring(document.location.protocol.length, document.location.href.length);\n            }, _baseview2.default, true);\n        });\n    }\n};\n\n},{\"../settings\":9,\"./baseview\":4,\"jquery\":\"jquery\",\"moment\":\"moment\"}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = {\n    'includeUrl': '/terminvereinbarung/statistic'\n};\n\n},{}],10:[function(require,module,exports){\n/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n\n},{\"chartjs-color-string\":11,\"color-convert\":14}],11:[function(require,module,exports){\n/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n\n},{\"color-name\":12}],12:[function(require,module,exports){\n'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n},{}],13:[function(require,module,exports){\n/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n},{}],14:[function(require,module,exports){\nvar conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n},{\"./conversions\":13}],15:[function(require,module,exports){\n/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Ticks = require('./core/core.ticks');\n\nrequire('./core/core.animation')(Chart);\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\nrequire('./core/core.scaleService')(Chart);\nrequire('./core/core.scale')(Chart);\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-it plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n\n},{\"./charts/Chart.Bar\":16,\"./charts/Chart.Bubble\":17,\"./charts/Chart.Doughnut\":18,\"./charts/Chart.Line\":19,\"./charts/Chart.PolarArea\":20,\"./charts/Chart.Radar\":21,\"./charts/Chart.Scatter\":22,\"./controllers/controller.bar\":23,\"./controllers/controller.bubble\":24,\"./controllers/controller.doughnut\":25,\"./controllers/controller.line\":26,\"./controllers/controller.polarArea\":27,\"./controllers/controller.radar\":28,\"./controllers/controller.scatter\":29,\"./core/core\":37,\"./core/core.animation\":30,\"./core/core.controller\":31,\"./core/core.datasetController\":32,\"./core/core.defaults\":33,\"./core/core.element\":34,\"./core/core.helpers\":35,\"./core/core.interaction\":36,\"./core/core.layouts\":38,\"./core/core.plugins\":39,\"./core/core.scale\":40,\"./core/core.scaleService\":41,\"./core/core.ticks\":42,\"./core/core.tooltip\":43,\"./elements/index\":48,\"./helpers/index\":53,\"./platforms/platform\":56,\"./plugins\":57,\"./scales/scale.category\":61,\"./scales/scale.linear\":62,\"./scales/scale.linearbase\":63,\"./scales/scale.logarithmic\":64,\"./scales/scale.radialLinear\":65,\"./scales/scale.time\":66}],16:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],17:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],18:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],19:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],20:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],21:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n},{}],22:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n\n},{}],23:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n\n},{\"../core/core.defaults\":33,\"../elements/index\":48,\"../helpers/index\":53}],24:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n\n},{\"../core/core.defaults\":33,\"../elements/index\":48,\"../helpers/index\":53}],25:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n\n},{\"../core/core.defaults\":33,\"../elements/index\":48,\"../helpers/index\":53}],26:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n\n},{\"../core/core.defaults\":33,\"../elements/index\":48,\"../helpers/index\":53}],27:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n\n},{\"../core/core.defaults\":33,\"../elements/index\":48,\"../helpers/index\":53}],28:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n\n},{\"../core/core.defaults\":33,\"../elements/index\":48,\"../helpers/index\":53}],29:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n\n},{\"../core/core.defaults\":33}],30:[function(require,module,exports){\n/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n\n},{\"../helpers/index\":53,\"./core.defaults\":33,\"./core.element\":34}],31:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n\n},{\"../helpers/index\":53,\"../platforms/platform\":56,\"./core.defaults\":33,\"./core.interaction\":36,\"./core.layouts\":38,\"./core.plugins\":39}],32:[function(require,module,exports){\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n\n},{\"../helpers/index\":53}],33:[function(require,module,exports){\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\n},{\"../helpers/index\":53}],34:[function(require,module,exports){\n'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n\n},{\"../helpers/index\":53,\"chartjs-color\":10}],35:[function(require,module,exports){\n/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\n},{\"../helpers/index\":53,\"./core.defaults\":33,\"chartjs-color\":10}],36:[function(require,module,exports){\n'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\n},{\"../helpers/index\":53}],37:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n\n},{\"./core.defaults\":33}],38:[function(require,module,exports){\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n},{\"../helpers/index\":53}],39:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n},{\"../helpers/index\":53,\"./core.defaults\":33}],40:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n\n},{\"../helpers/index\":53,\"./core.defaults\":33,\"./core.element\":34,\"./core.ticks\":42}],41:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n\n},{\"../helpers/index\":53,\"./core.defaults\":33,\"./core.layouts\":38}],42:[function(require,module,exports){\n'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\n},{\"../helpers/index\":53}],43:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n\n},{\"../helpers/index\":53,\"./core.defaults\":33,\"./core.element\":34}],44:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n\n},{\"../core/core.defaults\":33,\"../core/core.element\":34,\"../helpers/index\":53}],45:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\n},{\"../core/core.defaults\":33,\"../core/core.element\":34,\"../helpers/index\":53}],46:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n\n},{\"../core/core.defaults\":33,\"../core/core.element\":34,\"../helpers/index\":53}],47:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\n},{\"../core/core.defaults\":33,\"../core/core.element\":34}],48:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n\n},{\"./element.arc\":44,\"./element.line\":45,\"./element.point\":46,\"./element.rectangle\":47}],49:[function(require,module,exports){\n'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n\n},{\"./helpers.core\":50}],50:[function(require,module,exports){\n'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n},{}],51:[function(require,module,exports){\n'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n\n},{\"./helpers.core\":50}],52:[function(require,module,exports){\n'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\n},{\"./helpers.core\":50}],53:[function(require,module,exports){\n'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n\n},{\"./helpers.canvas\":49,\"./helpers.core\":50,\"./helpers.easing\":51,\"./helpers.options\":52}],54:[function(require,module,exports){\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\n},{}],55:[function(require,module,exports){\n/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n\n},{\"../helpers/index\":53}],56:[function(require,module,exports){\n'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n\n},{\"../helpers/index\":53,\"./platform.basic\":54,\"./platform.dom\":55}],57:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n\n},{\"./plugin.filler\":58,\"./plugin.legend\":59,\"./plugin.title\":60}],58:[function(require,module,exports){\n/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\n},{\"../core/core.defaults\":33,\"../elements/index\":48,\"../helpers/index\":53}],59:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\n},{\"../core/core.defaults\":33,\"../core/core.element\":34,\"../core/core.layouts\":38,\"../helpers/index\":53}],60:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\n},{\"../core/core.defaults\":33,\"../core/core.element\":34,\"../core/core.layouts\":38,\"../helpers/index\":53}],61:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n\n},{}],62:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n\n},{\"../core/core.defaults\":33,\"../core/core.ticks\":42,\"../helpers/index\":53}],63:[function(require,module,exports){\n'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n\n},{\"../helpers/index\":53}],64:[function(require,module,exports){\n'use strict';\n\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n\n},{\"../core/core.ticks\":42,\"../helpers/index\":53}],65:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n\n},{\"../core/core.defaults\":33,\"../core/core.ticks\":42,\"../helpers/index\":53}],66:[function(require,module,exports){\n/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n\n},{\"../core/core.defaults\":33,\"../helpers/index\":53,\"moment\":\"moment\"}],67:[function(require,module,exports){\n//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var de = moment.defineLocale('de', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return de;\n\n})));\n\n},{\"../moment\":68}],68:[function(require,module,exports){\n//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        if (!m) {\n            return isArray(this._weekdays) ? this._weekdays :\n                this._weekdays['standalone'];\n        }\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n            case 'date':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n\n        // 'date' is an alias for 'day', so it should be considered as such.\n        if (units === 'date') {\n            units = 'day';\n        }\n\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.22.2';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n\n},{}]},{},[3])\n\n","import BaseView from \"../../lib/baseview\"\n\nclass View extends BaseView {\n\n    constructor (element, options) {\n        super(element, options);\n        this.bindEvents();\n        console.log('Component: Periodlist', this, options);\n    }\n\n    bindEvents() {\n        this.$main.off('click').on('click', '.report-period--show-all', (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            this.$main.find('.report-period--show-all').hide();\n            this.$main.find(\".report-period--table tr\").removeClass('hide');\n        })\n    }\n}\n\nexport default View;\n","import BaseView from \"../../lib/baseview\"\nimport Chartjs from \"chart.js\"\n\nclass View extends BaseView {\n\n    constructor (element, options) {\n        super(element, options);\n        this.bindEvents();\n        console.log('Component: Warehouse report', this, options);\n        this.$.find(\".chartist\").text('[Initializing chart...]');\n        this.data = JSON.parse(this.$.find(\".chartist\").attr('data-chartist'));\n        this.$.find(\".chartist\").attr('data-chartist', '');\n        //this.renderChartist(data);\n        this.renderChartjs();\n    }\n\n    bindEvents() {\n        //this.$main.off('click').on('click', '.report-period--show-all', (ev) => {\n        //    ev.preventDefault();\n        //    ev.stopPropagation();\n        //    this.$main.find('.report-period--show-all').hide();\n        //    this.$main.find(\".report-period--table tr\").removeClass('hide');\n        //})\n    }\n\n    reduceToField(number) {\n        return (list, items) => {\n            list.push(items[number]);\n            return list;\n        }\n    }\n\n    getLabelInfo(label) {\n        for (const info of this.data.dictionary) {\n            if (info.variable == label) {\n                return info;\n            }\n        }\n        throw \"WarehouseReport: Label \" + label + \" not found\"\n    }\n\n    getListByLabel(label) {\n        const info = this.getLabelInfo(label);\n        const list = this.data.data.reduce(this.reduceToField(info.position), []);\n        return list;\n    }\n\n    renderChartjs() {\n        //console.log(this.data);\n        //console.log(this.data.visualization.ylabel);\n        const labels = this.getListByLabel(this.data.visualization.xlabel[0]);\n        const datasets = [];\n        const colorlist = [\n            '#008cca',\n            '#ffacaa',\n            '#d0eaca',\n            '#c2c2c2',\n            '#efc10f',\n        ];\n        for (const datalabel of this.data.visualization.ylabel) {\n            const dataset = {};\n            console.log(datalabel);\n            dataset.label = this.getLabelInfo(datalabel).description;\n            dataset.data = this.getListByLabel(datalabel);\n            dataset.borderColor = colorlist.shift();\n            dataset.fill = false;\n            datasets.push(dataset);\n        }\n        this.$.find(\".chartist\").html('<canvas></canvas>&nbsp;');\n        this.$.find(\".chartist\").css({\n            \"position\": \"relative\",\n            \"width\": \"100%\",\n            \"height\": \"550px\"\n        });\n        const $canvas = this.$.find(\".chartist canvas\");\n        const canvascontext = $canvas[0].getContext('2d');\n        //console.log(datasets);\n        new Chartjs(canvascontext, {\n            type: 'line',\n            data: {\n                labels: labels,\n                datasets: datasets\n            },\n            options: {\n                elements: {\n                    line: {\n                        tension: 0.25 // bezier error\n                    }\n                },\n                legend: {\n                    display: true,\n                    labels: {\n                        boxWidth: 12,\n                        usePointStyle: false\n                    }\n                },\n                tooltips: {\n                    mode: \"index\"\n                }\n            }\n        });\n    }\n}\n\nexport default View;\n","// --------------------------------------------------------\n// ZMS Statistic behavior\n// --------------------------------------------------------\n\nimport 'babel-polyfill';\n\n// Import base libs\nimport window from \"window\";\nimport $ from \"jquery\";\nimport moment from 'moment'\nimport 'moment/locale/de';\n//import bindReact from './lib/bindReact.js'\nimport { getDataAttributes } from './lib/utils'\nimport { forceHttps } from './lib/utils'\n\nimport PeriodListView from './block/periodlist'\nimport WarehouseReportView from './block/warehousereport'\n\n// Bind jQuery on $ for testing\nwindow.$ = $;\n\nmoment.locale('de')\n\n// Force https protocol\nforceHttps();\n\n// Say hello\nconsole.log(\"Welcome to the ZMS statistics interface...\");\n\n$('.report-period').each(function() {\n    new PeriodListView(this, getDataAttributes(this));\n})\n\n$('.warehouse-report').each(function() {\n    new WarehouseReportView(this, getDataAttributes(this));\n})\n","import $ from \"jquery\";\nimport BindHandler from \"./bindHandler\";\nimport ExceptionHandler from './exceptionHandler';\nimport DialogHandler from './dialogHandler';\nimport { lightbox, showSpinner, hideSpinner } from './utils';\nimport { noOp } from './utils'\n\nclass BaseView extends BindHandler {\n\n    constructor(element, options = {}) {\n        super();\n        this.$main = $(element);\n        this.$main.off();\n        this.options = options;\n        this.loadPromise = Promise.reject(null).catch(noOp);\n    }\n\n    get $ () {\n        return this.$main;\n    }\n\n    loadCall(url, method = 'GET', data = null, spinner = false) {\n        return BaseView.loadCallStatic(url, method, data, spinner, this);\n    }\n\n    static loadCallStatic(url, method = 'GET', data = null, spinner = false, parent) {\n        if (spinner) {\n            showSpinner(parent.$main);\n        }\n        const ajaxSettings = {\n            method\n        };\n        if (method === 'POST' || method === 'PUT') {\n            ajaxSettings.data = data;\n        }\n        return new Promise((resolve, reject) => {\n            $.ajax(url, ajaxSettings).done(responseData => {\n                resolve(responseData);\n            }).fail(err => {\n                let isException = err.responseText.toLowerCase().includes('exception');\n                if (err.status >= 400 && isException) {\n                    new ExceptionHandler(parent.$main, {\n                        code: err.status,\n                        message: err.responseText,\n                        parent: parent\n                    });\n                    hideSpinner(parent.$main);\n                } else {\n                    console.log('XHR load error', url, err);\n                    reject(err);\n                }\n            })\n        });\n    }\n\n    static loadDialogStatic (response, callback, parent, callbackAsBackgroundAction = false) {\n        var $container = null;\n        var $loader = null;\n        if (parent) {\n            $container = parent.$main;\n            $loader = parent.loadCall;\n        }\n\n        const { lightboxContentElement, destroyLightbox } = lightbox($container, () => {\n            destroyLightbox(),\n            (callbackAsBackgroundAction) ? callback() : () => {}\n        });\n        new DialogHandler(lightboxContentElement, {\n            response: response,\n            callback: () => {\n                callback();\n                destroyLightbox();\n            },\n            parent: parent,\n            loader: $loader,\n            handleLightbox: destroyLightbox\n        })\n    }\n}\n\nexport default BaseView;\n","\n\nclass BindHandler {\n\n    bindPublicMethods (...methods) {\n        let object = this;\n        methods.forEach( function (method) {\n            if (typeof object[method] !== 'function') {\n                throw \"Method not found: \" + method;\n            }\n            object[method] = object[method].bind(object);\n        });\n    }\n}\n\nexport default BindHandler;\n","import $ from 'jquery';\nimport ExceptionHandler from './exceptionHandler'\nimport settings from '../settings' \n\nclass DialogHandler {\n\n    constructor (element, options) {\n        this.$main = $(element);\n        this.response = options.response;\n        this.callback = options.callback || (() => {});\n        this.parent = options.parent;\n        this.loader = options.loader || (() => {});\n        this.handleLightbox = options.handleLightbox || (() => {});\n        this.bindEvents();\n        this.render();\n    }\n\n    render() {\n        DialogHandler.hideMessages(true);\n        var content = $(this.response).filter('div.dialog');\n        if (content.length == 0) {\n            var message = $(this.response).find('div.dialog');\n            if (message.length > 0) {\n                content = message.get(0).outerHTML;\n            }\n        }\n        if (content.length == 0) {\n            new ExceptionHandler(this.$main, {'message': this.response});\n        } else {\n            this.$main.html(content);\n        }\n    }\n\n    bindEvents() {\n        this.$main.off().on('click', '.button-ok', (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            this.callback(ev);\n        }).on('click', '.button-abort', (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            this.handleLightbox();\n        }).on('click', '.button-callback', (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            var callback = $(ev.target).data('callback');\n            this.callback = this.parent[callback];\n            this.callback(ev);\n        });\n    }\n\n    static hideMessages(instant = false)\n    {\n        let message = $.find('.message, .dialog');\n        if (message.length && ! instant) {\n            setTimeout(() => {\n                $(message).not('.message-keep').fadeOut().remove();\n            }, settings.hideMessageTime * 1000)\n        } else if (message.length && instant) {\n            $(message).not('.message-keep').fadeOut().remove();\n        }\n    }\n}\n\nexport default DialogHandler\n","import $ from 'jquery'\n\nclass ExceptionHandler {\n\n    constructor (element, options) {\n        this.$main = $(element)\n        this.message = options.message;\n        this.parent = options.parent || this.$main;\n        this.code = options.code;\n        this.callback = options.callback || this.closeException;\n        this.bindEvents();\n        this.render();\n    }\n\n    render() {\n        var $message = $(this.message).filter('div.exception');\n        if ($message.length == 0) {\n            $message = $(this.message).find('div.exception');\n        }\n\n        this.$messageElement = $($message.get(0).outerHTML);\n        this.$main.find('.dialog','.exception').remove();\n        this.$main.find('.body').first().prepend(this.$messageElement);\n        var $buttons = this.$messageElement.find('.btn');\n        if ($buttons.length == 0) {\n            $buttons = $('<a class=\"btn button-cancel right\">X</a>');\n            this.$messageElement.find('.header').append($buttons);\n        }\n        $buttons.on('click', (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            var callback = $(ev.target).data('callback');\n            if (this.parent[callback])\n                this.callback = this.parent[callback];\n            this.callback(ev);\n        })\n        /*setTimeout(() => {\n            this.closeException();\n        },8000)\n        */\n    }\n\n    closeException() {\n        if (this.$messageElement) {\n            this.$messageElement.remove();\n        }\n    }\n\n    bindEvents() {\n    }\n}\n\nexport default ExceptionHandler\n","import Baseview from './baseview';\nimport $ from 'jquery'\nimport moment from 'moment'\nimport settings from '../settings';\n\nexport const timeToFloat = (time) => {\n    const momentTime = moment(time, 'HH:mm:ss')\n\n    return momentTime.hours() + (momentTime.minutes() / 60)\n}\n\nexport const timestampToFloat = timestamp => {\n    const momentTime = moment(timestamp, 'X')\n\n    return momentTime.hours() + (momentTime.minutes() / 60)\n}\n\nexport const range = (start, end, step = 1) => {\n    const result = []\n    for (let i = start; i <= end; i += step) {\n        result.push(i)\n    }\n\n    return result\n}\n\nexport const deepGet = (obj, path = []) => path.reduce((carry, current) => carry ? carry[current] : undefined, obj)\n\nconst attributesToArray = attributes => Array.prototype.slice.call(attributes, 0)\n\nexport const getDataAttributes = (element) => {\n    const attributes = attributesToArray(element.attributes)\n    const dataRegex = /^data-/i\n\n    return attributes\n        .filter(attribute => (dataRegex.test(attribute.nodeName)))\n        .map(attribute => [\n            attribute.name.replace(dataRegex, ''),\n            attribute.value]\n        )\n        .reduce((carry, [key, value]) => {\n            carry[key] = tryJson(value)\n            return carry\n        }, {})\n}\n\nexport const tryJson = (input) => {\n    try {\n        return JSON.parse(input)\n    } catch (e) {\n        return input\n    }\n}\n\nconst lightboxHtml = '<div class=\"lightbox\"><div class=\"lightbox__content\"></div></div>'\n\nexport const lightbox = (parentElement, onBackgroundClick) => {\n    const lightboxElement = $(lightboxHtml)\n\n    if (!parentElement) {\n        parentElement = $('body')\n        lightboxElement.addClass('fixed')\n    }\n\n    const destroyLightbox = () => {\n        lightboxElement.off()\n        lightboxElement.remove()\n    }\n\n    const lightboxContentElement = lightboxElement.find('.lightbox__content');\n\n    lightboxElement.on('click', (ev) => {\n        console.log('background click', ev);\n        ev.stopPropagation()\n        ev.preventDefault()\n        destroyLightbox()\n        onBackgroundClick()\n    }).on('click', '.lightbox__content', (ev) => {\n        ev.stopPropagation();\n    })\n\n    $(parentElement).append(lightboxElement)\n\n    return {\n        lightboxContentElement,\n        destroyLightbox\n    }\n}\n\nexport const noOp = () => {}\n\nexport const getUrlParameters = () => {\n    return document.location.search.replace(/^\\?/, \"\")\n                   .split(\"&\")\n                   .reduce((carry, current) => {\n                       const [key, value] = current.split('=')\n\n                       if (key) {\n                           return Object.assign({}, carry, {[key]: value})\n                       } else {\n                           return carry\n                       }\n                   }, {})\n}\n\nexport const forceHttps = () => {\n    if (document.location.protocol !== \"https:\") {\n        Baseview.loadCallStatic(`${settings.includeUrl}/dialog/?template=force_https`).then((response) => {\n            Baseview.loadDialogStatic(response,\n                () => {\n                    document.location.href = \"https://\" + document.location.href.substring(document.location.protocol.length, document.location.href.length);\n                },\n                Baseview,\n                true\n            );\n        });\n    }\n}\n","\nexport default {\n    'includeUrl': '/terminvereinbarung/statistic'\n};\n","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Ticks = require('./core/core.ticks');\n\nrequire('./core/core.animation')(Chart);\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\nrequire('./core/core.scaleService')(Chart);\nrequire('./core/core.scale')(Chart);\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-it plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var de = moment.defineLocale('de', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return de;\n\n})));\n","//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        if (!m) {\n            return isArray(this._weekdays) ? this._weekdays :\n                this._weekdays['standalone'];\n        }\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n            case 'date':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n\n        // 'date' is an alias for 'day', so it should be considered as such.\n        if (units === 'date') {\n            units = 'day';\n        }\n\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.22.2';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n"]}