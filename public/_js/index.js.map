{"version":3,"sources":["js/node_modules/browserify/node_modules/browser-pack/_prelude.js","js/index.js","js/js/block/periodlist/index.js","js/js/element/form/maxChars.js","js/js/index.js","js/js/lib/baseview.js","js/js/lib/bindHandler.js","js/js/lib/dialogHandler.js","js/js/lib/exceptionHandler.js","js/js/lib/utils.js","js/node_modules/moment/locale/de.js","js/node_modules/moment/moment.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_baseview","_baseview2","View","_BaseView","element","options","this","_this","getPrototypeOf","bindEvents","console","log","_this2","$main","off","on","ev","preventDefault","stopPropagation","find","hide","removeClass","../../lib/baseview","2","_jquery","_jquery2","maxChars","$textarea","limit","parseInt","attr","text","val","chars","closest","new_text","substr","jquery","3","global","_window","window","_window2","_moment","_moment2","_utils","_periodlist","_periodlist2","$","locale","forceHttps","each","getDataAttributes","./block/periodlist","./lib/utils","babel-polyfill","moment","moment/locale/de","4","_bindHandler","_bindHandler2","_exceptionHandler","_exceptionHandler2","_dialogHandler","_dialogHandler2","BaseView","_BindHandler","arguments","undefined","loadPromise","Promise","reject","noOp","url","method","data","spinner","loadCallStatic","get","parent","showSpinner","ajaxSettings","resolve","ajax","done","responseData","fail","err","isException","responseText","toLowerCase","includes","status","message","hideSpinner","response","_callback","callbackAsBackgroundAction","$container","$loader","loadCall","_lightbox","lightbox","destroyLightbox","lightboxContentElement","callback","loader","handleLightbox","./bindHandler","./dialogHandler","./exceptionHandler","./utils","5","BindHandler","object","_len","methods","Array","_key","forEach","bind","6","_maxChars","_maxChars2","_settings","_settings2","DialogHandler","render","hideMessages","content","filter","outerHTML","html","instant","setTimeout","not","fadeOut","remove","hideMessageTime","../element/form/maxChars","../settings","7","ExceptionHandler","closeException","$message","$messageElement","first","prepend","$buttons","append","8","_defineProperty","getUrlParameters","tryJson","deepGet","range","timestampToFloat","timeToFloat","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","push","isArray","attributesToArray","time","momentTime","hours","minutes","timestamp","start","end","step","result","path","reduce","carry","current","attributes","slice","dataRegex","attribute","test","nodeName","map","name","replace","_ref","_ref2","input","JSON","parse","lightboxHtml","parentElement","onBackgroundClick","lightboxElement","addClass","document","location","search","split","_current$split","_current$split2","assign","protocol","includeUrl","then","loadDialogStatic","href","substring","./baseview","9","10","factory","define","amd","processRelativeTime","number","withoutSuffix","isFuture","format","m","h","d","dd","M","MM","y","yy","de","defineLocale","months","monthsShort","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","sameElse","nextDay","nextWeek","lastDay","lastWeek","relativeTime","future","past","s","ss","mm","hh","dayOfMonthOrdinalParse","ordinal","week","dow","doy","../moment","11","hooks","hookCallback","apply","setHookCallback","toString","isObject","isObjectEmpty","getOwnPropertyNames","k","hasOwnProperty","isUndefined","isNumber","isDate","Date","fn","res","hasOwnProp","b","extend","valueOf","createUTC","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","isValid","_isValid","flags","parsedParts","some","isNowValid","isNaN","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","NaN","copyConfig","to","from","prop","_isAMomentObject","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","absFloor","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","isFinite","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","arg","args","join","stack","deprecateSimple","deprecations","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","mom","now","output","_calendar","_longDateFormat","formatUpper","toUpperCase","invalidDate","_invalidDate","_ordinal","string","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","sort","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","max","addFormatToken","token","padded","func","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInYear","year","isLeapYear","getIsLeapYear","makeGetSet","keepTime","set$1","month","date","daysInMonth","stringGet","stringSet","prioritized","mod","x","modMonth","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","indexOf","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","createDate","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","add","getSetISOWeek","parseWeekday","weekdaysParse","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","kFormat","lowercase","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","j","loadLocale","globalLocale","oldLocale","locales","_abbr","aliasedRequire","getSetGlobalLocale","values","getLocale","baseConfig","abbr","parentLocale","localeFamilies","updateLocale","tmpLocale","listLocales","keys","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","defaults","currentDateArray","nowValue","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","untruncateYear","defaultLocaleMonthsShort","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","weekdayProvided","defaultLocaleWeekdaysShort","weekdayActual","calculateOffset","obsOffset","militaryOffset","numOffset","obsOffsets","hm","configFromRFC2822","parsedArray","configFromString","aspNetJsonRegex","createFromInputFallback","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","keepOffset","toDate","inspect","zone","prefix","datetime","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","clone$1","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","withSuffix","toISOString$1","abs$1","Y","D","toFixed","total","asSeconds","totalSign","ymSign","daysSign","hmsSign","fun","defaultCalendar","defaultLongDateFormat","defaultInvalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","defaultRelativeTime","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","parseTwoDigitYear","getSetYear","defaultLocaleMonths","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysMin","kInput","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","meridiemParse","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS"],"mappings":"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","file":"index.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _baseview = require('../../lib/baseview');\n\nvar _baseview2 = _interopRequireDefault(_baseview);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar View = function (_BaseView) {\n    _inherits(View, _BaseView);\n\n    function View(element, options) {\n        _classCallCheck(this, View);\n\n        var _this = _possibleConstructorReturn(this, (View.__proto__ || Object.getPrototypeOf(View)).call(this, element, options));\n\n        _this.bindEvents();\n        console.log('Component: Periodlist', _this, options);\n        return _this;\n    }\n\n    _createClass(View, [{\n        key: 'bindEvents',\n        value: function bindEvents() {\n            var _this2 = this;\n\n            this.$main.off('click').on('click', '.report-period--show-all', function (ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                _this2.$main.find('.report-period--show-all').hide();\n                _this2.$main.find(\".report-period--table tr\").removeClass('hide');\n            });\n        }\n    }]);\n\n    return View;\n}(_baseview2.default);\n\nexports.default = View;\n\n},{\"../../lib/baseview\":4}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar maxChars = function maxChars(element) {\n    var $textarea = (0, _jquery2.default)(element);\n\n    $textarea.on('keyup', function (ev) {\n        var limit = parseInt((0, _jquery2.default)(ev.target).attr('maxlength'));\n        var text = (0, _jquery2.default)(ev.target).val();\n        var chars = text.length;\n        (0, _jquery2.default)(ev.target).closest('div').find('.maxcharsleft span').text(chars);\n        if (chars > limit) {\n            var new_text = text.substr(0, limit);\n            (0, _jquery2.default)(ev.target).val(new_text);\n        }\n    });\n};\n\nexports.default = maxChars;\n\n},{\"jquery\":\"jquery\"}],3:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nrequire(\"babel-polyfill\");\n\nvar _window = (typeof window !== \"undefined\" ? window['window'] : typeof global !== \"undefined\" ? global['window'] : null);\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _jquery = require(\"jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _moment = require(\"moment\");\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nrequire(\"moment/locale/de\");\n\nvar _utils = require(\"./lib/utils\");\n\nvar _periodlist = require(\"./block/periodlist\");\n\nvar _periodlist2 = _interopRequireDefault(_periodlist);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Bind jQuery on $ for testing\n// --------------------------------------------------------\n// ZMS Statistic behavior\n// --------------------------------------------------------\n\n_window2.default.$ = _jquery2.default;\n//import bindReact from './lib/bindReact.js'\n\n\n// Import base libs\n\n\n_moment2.default.locale('de');\n\n// Force https protocol\n(0, _utils.forceHttps)();\n\n// Say hello\nconsole.log(\"Welcome to the ZMS statistic interface...\");\n\n(0, _jquery2.default)('.report-period').each(function () {\n    new _periodlist2.default(this, (0, _utils.getDataAttributes)(this));\n});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./block/periodlist\":1,\"./lib/utils\":8,\"babel-polyfill\":\"babel-polyfill\",\"jquery\":\"jquery\",\"moment\":\"moment\",\"moment/locale/de\":10}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _jquery = require(\"jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _bindHandler = require(\"./bindHandler\");\n\nvar _bindHandler2 = _interopRequireDefault(_bindHandler);\n\nvar _exceptionHandler = require(\"./exceptionHandler\");\n\nvar _exceptionHandler2 = _interopRequireDefault(_exceptionHandler);\n\nvar _dialogHandler = require(\"./dialogHandler\");\n\nvar _dialogHandler2 = _interopRequireDefault(_dialogHandler);\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BaseView = function (_BindHandler) {\n    _inherits(BaseView, _BindHandler);\n\n    function BaseView(element) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        _classCallCheck(this, BaseView);\n\n        var _this = _possibleConstructorReturn(this, (BaseView.__proto__ || Object.getPrototypeOf(BaseView)).call(this));\n\n        _this.$main = (0, _jquery2.default)(element);\n        _this.$main.off();\n        _this.options = options;\n        _this.loadPromise = Promise.reject(null).catch(_utils.noOp);\n        return _this;\n    }\n\n    _createClass(BaseView, [{\n        key: \"loadCall\",\n        value: function loadCall(url) {\n            var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n            var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var spinner = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            return BaseView.loadCallStatic(url, method, data, spinner, this);\n        }\n    }, {\n        key: \"$\",\n        get: function get() {\n            return this.$main;\n        }\n    }], [{\n        key: \"loadCallStatic\",\n        value: function loadCallStatic(url) {\n            var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n            var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var spinner = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n            var parent = arguments[4];\n\n            if (spinner) {\n                (0, _utils.showSpinner)(parent.$main);\n            }\n            var ajaxSettings = {\n                method: method\n            };\n            if (method === 'POST' || method === 'PUT') {\n                ajaxSettings.data = data;\n            }\n            return new Promise(function (resolve, reject) {\n                _jquery2.default.ajax(url, ajaxSettings).done(function (responseData) {\n                    resolve(responseData);\n                }).fail(function (err) {\n                    var isException = err.responseText.toLowerCase().includes('exception');\n                    if (err.status >= 400 && isException) {\n                        new _exceptionHandler2.default(parent.$main, {\n                            code: err.status,\n                            message: err.responseText,\n                            parent: parent\n                        });\n                        (0, _utils.hideSpinner)(parent.$main);\n                    } else {\n                        console.log('XHR load error', url, err);\n                        reject(err);\n                    }\n                });\n            });\n        }\n    }, {\n        key: \"loadDialogStatic\",\n        value: function loadDialogStatic(response, _callback, parent) {\n            var callbackAsBackgroundAction = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n            var $container = null;\n            var $loader = null;\n            if (parent) {\n                $container = parent.$main;\n                $loader = parent.loadCall;\n            }\n\n            var _lightbox = (0, _utils.lightbox)($container, function () {\n                destroyLightbox(), callbackAsBackgroundAction ? _callback() : function () {};\n            }),\n                lightboxContentElement = _lightbox.lightboxContentElement,\n                destroyLightbox = _lightbox.destroyLightbox;\n\n            new _dialogHandler2.default(lightboxContentElement, {\n                response: response,\n                callback: function callback() {\n                    _callback();\n                    destroyLightbox();\n                },\n                parent: parent,\n                loader: $loader,\n                handleLightbox: destroyLightbox\n            });\n        }\n    }]);\n\n    return BaseView;\n}(_bindHandler2.default);\n\nexports.default = BaseView;\n\n},{\"./bindHandler\":5,\"./dialogHandler\":6,\"./exceptionHandler\":7,\"./utils\":8,\"jquery\":\"jquery\"}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar BindHandler = function () {\n    function BindHandler() {\n        _classCallCheck(this, BindHandler);\n    }\n\n    _createClass(BindHandler, [{\n        key: \"bindPublicMethods\",\n        value: function bindPublicMethods() {\n            var object = this;\n\n            for (var _len = arguments.length, methods = Array(_len), _key = 0; _key < _len; _key++) {\n                methods[_key] = arguments[_key];\n            }\n\n            methods.forEach(function (method) {\n                if (typeof object[method] !== 'function') {\n                    throw \"Method not found: \" + method;\n                }\n                object[method] = object[method].bind(object);\n            });\n        }\n    }]);\n\n    return BindHandler;\n}();\n\nexports.default = BindHandler;\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _exceptionHandler = require('./exceptionHandler');\n\nvar _exceptionHandler2 = _interopRequireDefault(_exceptionHandler);\n\nvar _maxChars = require('../element/form/maxChars');\n\nvar _maxChars2 = _interopRequireDefault(_maxChars);\n\nvar _settings = require('../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DialogHandler = function () {\n    function DialogHandler(element, options) {\n        _classCallCheck(this, DialogHandler);\n\n        this.$main = (0, _jquery2.default)(element);\n        this.response = options.response;\n        this.callback = options.callback || function () {};\n        this.parent = options.parent;\n        this.loader = options.loader || function () {};\n        this.handleLightbox = options.handleLightbox || function () {};\n        this.bindEvents();\n        this.render();\n    }\n\n    _createClass(DialogHandler, [{\n        key: 'render',\n        value: function render() {\n            DialogHandler.hideMessages(true);\n            var content = (0, _jquery2.default)(this.response).filter('div.dialog');\n            if (content.length == 0) {\n                var message = (0, _jquery2.default)(this.response).find('div.dialog');\n                if (message.length > 0) {\n                    content = message.get(0).outerHTML;\n                }\n            }\n            if (content.length == 0) {\n                new _exceptionHandler2.default(this.$main, { 'message': this.response });\n            } else {\n                this.$main.html(content);\n            }\n\n            (0, _jquery2.default)('textarea.maxchars').each(function () {\n                (0, _maxChars2.default)(this);\n            });\n        }\n    }, {\n        key: 'bindEvents',\n        value: function bindEvents() {\n            var _this = this;\n\n            this.$main.off().on('click', '.button-ok', function (ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                _this.callback(ev);\n            }).on('click', '.button-abort', function (ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                _this.handleLightbox();\n            }).on('click', '.button-callback', function (ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                var callback = (0, _jquery2.default)(ev.target).data('callback');\n                _this.callback = _this.parent[callback];\n                _this.callback(ev);\n            });\n        }\n    }], [{\n        key: 'hideMessages',\n        value: function hideMessages() {\n            var instant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            var message = _jquery2.default.find('.message, .dialog');\n            if (message.length && !instant) {\n                setTimeout(function () {\n                    (0, _jquery2.default)(message).not('.message-keep').fadeOut().remove();\n                }, _settings2.default.hideMessageTime * 1000);\n            } else if (message.length && instant) {\n                (0, _jquery2.default)(message).not('.message-keep').fadeOut().remove();\n            }\n        }\n    }]);\n\n    return DialogHandler;\n}();\n\nexports.default = DialogHandler;\n\n},{\"../element/form/maxChars\":2,\"../settings\":9,\"./exceptionHandler\":7,\"jquery\":\"jquery\"}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ExceptionHandler = function () {\n    function ExceptionHandler(element, options) {\n        _classCallCheck(this, ExceptionHandler);\n\n        this.$main = (0, _jquery2.default)(element);\n        this.message = options.message;\n        this.parent = options.parent || this.$main;\n        this.code = options.code;\n        this.callback = options.callback || this.closeException;\n        this.bindEvents();\n        this.render();\n    }\n\n    _createClass(ExceptionHandler, [{\n        key: 'render',\n        value: function render() {\n            var _this = this;\n\n            var $message = (0, _jquery2.default)(this.message).filter('div.exception');\n            if ($message.length == 0) {\n                $message = (0, _jquery2.default)(this.message).find('div.exception');\n            }\n\n            this.$messageElement = (0, _jquery2.default)($message.get(0).outerHTML);\n            this.$main.find('.dialog', '.exception').remove();\n            this.$main.find('.body').first().prepend(this.$messageElement);\n            var $buttons = this.$messageElement.find('.btn');\n            if ($buttons.length == 0) {\n                $buttons = (0, _jquery2.default)('<a class=\"btn button-cancel right\">X</a>');\n                this.$messageElement.find('.header').append($buttons);\n            }\n            $buttons.on('click', function (ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                var callback = (0, _jquery2.default)(ev.target).data('callback');\n                if (_this.parent[callback]) _this.callback = _this.parent[callback];\n                _this.callback(ev);\n            });\n            /*setTimeout(() => {\n                this.closeException();\n            },8000)\n            */\n        }\n    }, {\n        key: 'closeException',\n        value: function closeException() {\n            if (this.$messageElement) {\n                this.$messageElement.remove();\n            }\n        }\n    }, {\n        key: 'bindEvents',\n        value: function bindEvents() {}\n    }]);\n\n    return ExceptionHandler;\n}();\n\nexports.default = ExceptionHandler;\n\n},{\"jquery\":\"jquery\"}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.forceHttps = exports.getUrlParameters = exports.noOp = exports.lightbox = exports.tryJson = exports.getDataAttributes = exports.deepGet = exports.range = exports.timestampToFloat = exports.timeToFloat = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _baseview = require('./baseview');\n\nvar _baseview2 = _interopRequireDefault(_baseview);\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _settings = require('../settings');\n\nvar _settings2 = _interopRequireDefault(_settings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar timeToFloat = exports.timeToFloat = function timeToFloat(time) {\n    var momentTime = (0, _moment2.default)(time, 'HH:mm:ss');\n\n    return momentTime.hours() + momentTime.minutes() / 60;\n};\n\nvar timestampToFloat = exports.timestampToFloat = function timestampToFloat(timestamp) {\n    var momentTime = (0, _moment2.default)(timestamp, 'X');\n\n    return momentTime.hours() + momentTime.minutes() / 60;\n};\n\nvar range = exports.range = function range(start, end) {\n    var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n    var result = [];\n    for (var i = start; i <= end; i += step) {\n        result.push(i);\n    }\n\n    return result;\n};\n\nvar deepGet = exports.deepGet = function deepGet(obj) {\n    var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    return path.reduce(function (carry, current) {\n        return carry ? carry[current] : undefined;\n    }, obj);\n};\n\nvar attributesToArray = function attributesToArray(attributes) {\n    return Array.prototype.slice.call(attributes, 0);\n};\n\nvar getDataAttributes = exports.getDataAttributes = function getDataAttributes(element) {\n    var attributes = attributesToArray(element.attributes);\n    var dataRegex = /^data-/i;\n\n    return attributes.filter(function (attribute) {\n        return dataRegex.test(attribute.nodeName);\n    }).map(function (attribute) {\n        return [attribute.name.replace(dataRegex, ''), attribute.value];\n    }).reduce(function (carry, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        carry[key] = tryJson(value);\n        return carry;\n    }, {});\n};\n\nvar tryJson = exports.tryJson = function tryJson(input) {\n    try {\n        return JSON.parse(input);\n    } catch (e) {\n        return input;\n    }\n};\n\nvar lightboxHtml = '<div class=\"lightbox\"><div class=\"lightbox__content\"></div></div>';\n\nvar lightbox = exports.lightbox = function lightbox(parentElement, onBackgroundClick) {\n    var lightboxElement = (0, _jquery2.default)(lightboxHtml);\n\n    if (!parentElement) {\n        parentElement = (0, _jquery2.default)('body');\n        lightboxElement.addClass('fixed');\n    }\n\n    var destroyLightbox = function destroyLightbox() {\n        lightboxElement.off();\n        lightboxElement.remove();\n    };\n\n    var lightboxContentElement = lightboxElement.find('.lightbox__content');\n\n    lightboxElement.on('click', function (ev) {\n        console.log('background click', ev);\n        ev.stopPropagation();\n        ev.preventDefault();\n        destroyLightbox();\n        onBackgroundClick();\n    }).on('click', '.lightbox__content', function (ev) {\n        ev.stopPropagation();\n    });\n\n    (0, _jquery2.default)(parentElement).append(lightboxElement);\n\n    return {\n        lightboxContentElement: lightboxContentElement,\n        destroyLightbox: destroyLightbox\n    };\n};\n\nvar noOp = exports.noOp = function noOp() {};\n\nvar getUrlParameters = exports.getUrlParameters = function getUrlParameters() {\n    return document.location.search.replace(/^\\?/, \"\").split(\"&\").reduce(function (carry, current) {\n        var _current$split = current.split('='),\n            _current$split2 = _slicedToArray(_current$split, 2),\n            key = _current$split2[0],\n            value = _current$split2[1];\n\n        if (key) {\n            return Object.assign({}, carry, _defineProperty({}, key, value));\n        } else {\n            return carry;\n        }\n    }, {});\n};\n\nvar forceHttps = exports.forceHttps = function forceHttps() {\n    if (document.location.protocol !== \"https:\") {\n        _baseview2.default.loadCallStatic(_settings2.default.includeUrl + '/dialog/?template=force_https').then(function (response) {\n            _baseview2.default.loadDialogStatic(response, function () {\n                document.location.href = \"https://\" + document.location.href.substring(document.location.protocol.length, document.location.href.length);\n            }, _baseview2.default, true);\n        });\n    }\n};\n\n},{\"../settings\":9,\"./baseview\":4,\"jquery\":\"jquery\",\"moment\":\"moment\"}],9:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {};\n\n},{}],10:[function(require,module,exports){\n//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var de = moment.defineLocale('de', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return de;\n\n})));\n\n},{\"../moment\":11}],11:[function(require,module,exports){\n//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        if (!m) {\n            return isArray(this._weekdays) ? this._weekdays :\n                this._weekdays['standalone'];\n        }\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n            case 'date':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n\n        // 'date' is an alias for 'day', so it should be considered as such.\n        if (units === 'date') {\n            units = 'day';\n        }\n\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.22.2';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n\n},{}]},{},[3])\n\n","import BaseView from \"../../lib/baseview\"\n\nclass View extends BaseView {\n\n    constructor (element, options) {\n        super(element, options);\n        this.bindEvents();\n        console.log('Component: Periodlist', this, options);\n    }\n\n    bindEvents() {\n        this.$main.off('click').on('click', '.report-period--show-all', (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            this.$main.find('.report-period--show-all').hide();\n            this.$main.find(\".report-period--table tr\").removeClass('hide');\n        })\n    }\n}\n\nexport default View;\n","import $ from \"jquery\";\n\nconst maxChars = (element) => {\n    const $textarea = $(element)\n\n    $textarea.on('keyup', (ev) => {\n        var limit = parseInt($(ev.target).attr('maxlength'));\n        var text = $(ev.target).val();\n        var chars = text.length;\n        $(ev.target).closest('div').find('.maxcharsleft span').text(chars);\n        if(chars > limit){\n            var new_text = text.substr(0, limit);\n            $(ev.target).val(new_text);\n        }\n    });\n}\n\nexport default maxChars\n","// --------------------------------------------------------\n// ZMS Statistic behavior\n// --------------------------------------------------------\n\nimport 'babel-polyfill';\n\n// Import base libs\nimport window from \"window\";\nimport $ from \"jquery\";\nimport moment from 'moment'\nimport 'moment/locale/de';\n//import bindReact from './lib/bindReact.js'\nimport { getDataAttributes } from './lib/utils'\nimport { forceHttps } from './lib/utils'\n\nimport PeriodListView from './block/periodlist'\n\n// Bind jQuery on $ for testing\nwindow.$ = $;\n\nmoment.locale('de')\n\n// Force https protocol\nforceHttps();\n\n// Say hello\nconsole.log(\"Welcome to the ZMS statistic interface...\");\n\n$('.report-period').each(function() {\n    new PeriodListView(this, getDataAttributes(this));\n})\n","import $ from \"jquery\";\nimport BindHandler from \"./bindHandler\";\nimport ExceptionHandler from './exceptionHandler';\nimport DialogHandler from './dialogHandler';\nimport { lightbox, showSpinner, hideSpinner } from './utils';\nimport { noOp } from './utils'\n\nclass BaseView extends BindHandler {\n\n    constructor(element, options = {}) {\n        super();\n        this.$main = $(element);\n        this.$main.off();\n        this.options = options;\n        this.loadPromise = Promise.reject(null).catch(noOp);\n    }\n\n    get $ () {\n        return this.$main;\n    }\n\n    loadCall(url, method = 'GET', data = null, spinner = false) {\n        return BaseView.loadCallStatic(url, method, data, spinner, this);\n    }\n\n    static loadCallStatic(url, method = 'GET', data = null, spinner = false, parent) {\n        if (spinner) {\n            showSpinner(parent.$main);\n        }\n        const ajaxSettings = {\n            method\n        };\n        if (method === 'POST' || method === 'PUT') {\n            ajaxSettings.data = data;\n        }\n        return new Promise((resolve, reject) => {\n            $.ajax(url, ajaxSettings).done(responseData => {\n                resolve(responseData);\n            }).fail(err => {\n                let isException = err.responseText.toLowerCase().includes('exception');\n                if (err.status >= 400 && isException) {\n                    new ExceptionHandler(parent.$main, {\n                        code: err.status,\n                        message: err.responseText,\n                        parent: parent\n                    });\n                    hideSpinner(parent.$main);\n                } else {\n                    console.log('XHR load error', url, err);\n                    reject(err);\n                }\n            })\n        });\n    }\n\n    static loadDialogStatic (response, callback, parent, callbackAsBackgroundAction = false) {\n        var $container = null;\n        var $loader = null;\n        if (parent) {\n            $container = parent.$main;\n            $loader = parent.loadCall;\n        }\n\n        const { lightboxContentElement, destroyLightbox } = lightbox($container, () => {\n            destroyLightbox(),\n            (callbackAsBackgroundAction) ? callback() : () => {}\n        });\n        new DialogHandler(lightboxContentElement, {\n            response: response,\n            callback: () => {\n                callback();\n                destroyLightbox();\n            },\n            parent: parent,\n            loader: $loader,\n            handleLightbox: destroyLightbox\n        })\n    }\n}\n\nexport default BaseView;\n","\n\nclass BindHandler {\n\n    bindPublicMethods (...methods) {\n        let object = this;\n        methods.forEach( function (method) {\n            if (typeof object[method] !== 'function') {\n                throw \"Method not found: \" + method;\n            }\n            object[method] = object[method].bind(object);\n        });\n    }\n}\n\nexport default BindHandler;\n","import $ from 'jquery';\nimport ExceptionHandler from './exceptionHandler'\nimport maxChars from '../element/form/maxChars'\nimport settings from '../settings'\n\nclass DialogHandler {\n\n    constructor (element, options) {\n        this.$main = $(element);\n        this.response = options.response;\n        this.callback = options.callback || (() => {});\n        this.parent = options.parent;\n        this.loader = options.loader || (() => {});\n        this.handleLightbox = options.handleLightbox || (() => {});\n        this.bindEvents();\n        this.render();\n    }\n\n    render() {\n        DialogHandler.hideMessages(true);\n        var content = $(this.response).filter('div.dialog');\n        if (content.length == 0) {\n            var message = $(this.response).find('div.dialog');\n            if (message.length > 0) {\n                content = message.get(0).outerHTML;\n            }\n        }\n        if (content.length == 0) {\n            new ExceptionHandler(this.$main, {'message': this.response});\n        } else {\n            this.$main.html(content);\n        }\n\n        $('textarea.maxchars').each(function() {\n            maxChars(this);\n        });\n    }\n\n    bindEvents() {\n        this.$main.off().on('click', '.button-ok', (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            this.callback(ev);\n        }).on('click', '.button-abort', (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            this.handleLightbox();\n        }).on('click', '.button-callback', (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            var callback = $(ev.target).data('callback');\n            this.callback = this.parent[callback];\n            this.callback(ev);\n        });\n    }\n\n    static hideMessages(instant = false)\n    {\n        let message = $.find('.message, .dialog');\n        if (message.length && ! instant) {\n            setTimeout(() => {\n                $(message).not('.message-keep').fadeOut().remove();\n            }, settings.hideMessageTime * 1000)\n        } else if (message.length && instant) {\n            $(message).not('.message-keep').fadeOut().remove();\n        }\n    }\n}\n\nexport default DialogHandler\n","import $ from 'jquery'\n\nclass ExceptionHandler {\n\n    constructor (element, options) {\n        this.$main = $(element)\n        this.message = options.message;\n        this.parent = options.parent || this.$main;\n        this.code = options.code;\n        this.callback = options.callback || this.closeException;\n        this.bindEvents();\n        this.render();\n    }\n\n    render() {\n        var $message = $(this.message).filter('div.exception');\n        if ($message.length == 0) {\n            $message = $(this.message).find('div.exception');\n        }\n\n        this.$messageElement = $($message.get(0).outerHTML);\n        this.$main.find('.dialog','.exception').remove();\n        this.$main.find('.body').first().prepend(this.$messageElement);\n        var $buttons = this.$messageElement.find('.btn');\n        if ($buttons.length == 0) {\n            $buttons = $('<a class=\"btn button-cancel right\">X</a>');\n            this.$messageElement.find('.header').append($buttons);\n        }\n        $buttons.on('click', (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            var callback = $(ev.target).data('callback');\n            if (this.parent[callback])\n                this.callback = this.parent[callback];\n            this.callback(ev);\n        })\n        /*setTimeout(() => {\n            this.closeException();\n        },8000)\n        */\n    }\n\n    closeException() {\n        if (this.$messageElement) {\n            this.$messageElement.remove();\n        }\n    }\n\n    bindEvents() {\n    }\n}\n\nexport default ExceptionHandler\n","import Baseview from './baseview';\nimport $ from 'jquery'\nimport moment from 'moment'\nimport settings from '../settings';\n\nexport const timeToFloat = (time) => {\n    const momentTime = moment(time, 'HH:mm:ss')\n\n    return momentTime.hours() + (momentTime.minutes() / 60)\n}\n\nexport const timestampToFloat = timestamp => {\n    const momentTime = moment(timestamp, 'X')\n\n    return momentTime.hours() + (momentTime.minutes() / 60)\n}\n\nexport const range = (start, end, step = 1) => {\n    const result = []\n    for (let i = start; i <= end; i += step) {\n        result.push(i)\n    }\n\n    return result\n}\n\nexport const deepGet = (obj, path = []) => path.reduce((carry, current) => carry ? carry[current] : undefined, obj)\n\nconst attributesToArray = attributes => Array.prototype.slice.call(attributes, 0)\n\nexport const getDataAttributes = (element) => {\n    const attributes = attributesToArray(element.attributes)\n    const dataRegex = /^data-/i\n\n    return attributes\n        .filter(attribute => (dataRegex.test(attribute.nodeName)))\n        .map(attribute => [\n            attribute.name.replace(dataRegex, ''),\n            attribute.value]\n        )\n        .reduce((carry, [key, value]) => {\n            carry[key] = tryJson(value)\n            return carry\n        }, {})\n}\n\nexport const tryJson = (input) => {\n    try {\n        return JSON.parse(input)\n    } catch (e) {\n        return input\n    }\n}\n\nconst lightboxHtml = '<div class=\"lightbox\"><div class=\"lightbox__content\"></div></div>'\n\nexport const lightbox = (parentElement, onBackgroundClick) => {\n    const lightboxElement = $(lightboxHtml)\n\n    if (!parentElement) {\n        parentElement = $('body')\n        lightboxElement.addClass('fixed')\n    }\n\n    const destroyLightbox = () => {\n        lightboxElement.off()\n        lightboxElement.remove()\n    }\n\n    const lightboxContentElement = lightboxElement.find('.lightbox__content');\n\n    lightboxElement.on('click', (ev) => {\n        console.log('background click', ev);\n        ev.stopPropagation()\n        ev.preventDefault()\n        destroyLightbox()\n        onBackgroundClick()\n    }).on('click', '.lightbox__content', (ev) => {\n        ev.stopPropagation();\n    })\n\n    $(parentElement).append(lightboxElement)\n\n    return {\n        lightboxContentElement,\n        destroyLightbox\n    }\n}\n\nexport const noOp = () => {}\n\nexport const getUrlParameters = () => {\n    return document.location.search.replace(/^\\?/, \"\")\n                   .split(\"&\")\n                   .reduce((carry, current) => {\n                       const [key, value] = current.split('=')\n\n                       if (key) {\n                           return Object.assign({}, carry, {[key]: value})\n                       } else {\n                           return carry\n                       }\n                   }, {})\n}\n\nexport const forceHttps = () => {\n    if (document.location.protocol !== \"https:\") {\n        Baseview.loadCallStatic(`${settings.includeUrl}/dialog/?template=force_https`).then((response) => {\n            Baseview.loadDialogStatic(response,\n                () => {\n                    document.location.href = \"https://\" + document.location.href.substring(document.location.protocol.length, document.location.href.length);\n                },\n                Baseview,\n                true\n            );\n        });\n    }\n}\n","//! moment.js locale configuration\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var de = moment.defineLocale('de', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return de;\n\n})));\n","//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        if (!m) {\n            return isArray(this._weekdays) ? this._weekdays :\n                this._weekdays['standalone'];\n        }\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n            case 'date':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n\n        // 'date' is an alias for 'day', so it should be considered as such.\n        if (units === 'date') {\n            units = 'day';\n        }\n\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.22.2';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n"]}