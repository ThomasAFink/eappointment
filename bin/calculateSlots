#!/usr/bin/env php
<?php
$dir = is_dir(getcwd() . '/vendor/bo/zmsdb') ? realpath(getcwd()) : realpath(__DIR__);
while ($dir != '/' && !file_exists("$dir/config.php")) {
    $dir = dirname($dir);
    if (file_exists("$dir/autoload.php")) {
        require_once("$dir/autoload.php");
    }
}
if (file_exists("$dir/bootstrap.php")) {
    require("$dir/bootstrap.php");
} else {
    require("$dir/config.php");
}
ini_set('memory_limit', '1024M');

$dates = preg_grep('#^\d\d\d\d-\d\d?-\d\d?#', $argv);
$now = new \DateTimeImmutable();
if (count($dates)) {
    $now = new \DateTimeImmutable(array_shift($dates));
} elseif (class_exists('\App') && isset(\App::$now)) {
    $now = \App::$now;
}
if (preg_grep('#^--longrun$#', $argv)) {
    $runTimeout = 7200;
} else {
    $runTimeout = 10;
}
if (preg_grep('#^--commit$#', $argv)) {
    $calculator = new \BO\Zmsdb\Helper\CalculateSlots(preg_grep('#^--?v(erbose)?$#', $argv));
    try {
        $calculator->writeCalculations($now, $runTimeout);
    } catch (\BO\Zmsdb\Exception\Pdo\LockTimeout $exception) {
        $calculator->log("Unexpected end due to lock timeout, showing tracelog:");
        $calculator->dumpLogs();
        error_log($exception->getTraceAsString());
    } catch (\Exception $exception) {
        $calculator->dumpLogs();
        throw $exception;
    }
    $calculator->writeCanceledSlots($now);
    if (preg_grep('#^--delete$#', $argv)) {
        $calculator->deleteOldSlots($now);
    }
    $calculator->writeMaintenanceQueries($now);
} else {
    $dbname = \BO\Zmsdb\Connection\Select::$writeSourceName;
    $username = \BO\Zmsdb\Connection\Select::$username;
    echo "Usage: {$argv[0]} --commit [--verbose] [--delete] [--longrun] [2018-04-01]\n"
        . "\tCalculates and updates available appointments/slots for availabilities.\n\n";
    echo "\tDatabase:             $dbname as $username\n";
    echo "\tDate for calculation: ".$now->format('c')."\n\n";
}
